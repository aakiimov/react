{"version":3,"sources":["firebase/config.ts","store/constants/user.ts","store/reducers/user/index.ts","store/constants/friends.ts","store/reducers/friends/index.ts","store/reducers/index.ts","store/sagas/worker/fetchAccessToken.ts","store/sagas/watcher/fetchAccessToken.ts","store/sagas/worker/fetchFriends.ts","store/sagas/watcher/fetchFriends.ts","store/sagas/watcher/index.ts","store/index.ts","store/actions/user/index.ts","components/Dashboard/modules/Card/Card.tsx","components/Contacts/Contacts.tsx","views/App/types.ts","components/ContentFix/ContentFix.tsx","components/AddButton/AddButton.tsx","utils/getUserName.ts","components/DebtCard/DebtCard.tsx","components/DebtContainer/DebtContainer.tsx","components/CatalogItem/CatalogItem.tsx","modals/AddDebt/types.ts","components/DebtController/types.ts","components/DebtController/modules/Carousel/Carousel.tsx","components/DebtController/modules/Section/Section.tsx","utils/getCurrentUserId.ts","firebase/index.ts","components/DebtController/DebtController.tsx","panels/Catalog/Catalog.tsx","panels/App/App.tsx","modals/AddDebt/AddDebt.tsx","views/App/App.tsx","types/tabRoute.ts","views/Catalog/Catalog.tsx","router.tsx","app.tsx","index.tsx"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SET_USER","FETCH_ACCESS_TOKEN","initialState","access_token","SET_FRIENDS","id","first_name","last_name","photo_100","track_code","nickname","getFriendsState","state","friends","combineReducers","user","action","type","constants","payload","fetchAccessTokenWorker","queryString","window","location","search","urlParams","URLSearchParams","get","bridge","send","Number","catch","alert","response","put","fetchAccessTokenWatcher","takeLatest","fetchFriendsWorker","method","params","order","fields","v","store","getState","data","items","fetchFriendsWatcher","watcher","all","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","logger","createBrowserHistory","run","fetchAccessToken","dashboardCard","block","DashboardCard","props","className","onClick","selected","title","subtitle","children","connect","header","mode","length","map","friend","before","src","size","AppModal","contactFix","ContentFix","addButton","AddButton","onModalShow","AddDebt","color","getUserName","debtCard","DebtCard","userName","itemKey","moment","createdAt","format","expirationDate","sum","debtContainer","React","useState","sortType","setSortType","userId","renderDebt","node","contactId","find","Fragment","console","log","changeSortType","path","isLoading","value","Object","values","sort","a","b","summary","returnDate","diff","catalogItem","CatalogItem","href","target","rel","avatarSrc","DebtType","SortType","DebtCarousel","instance","onClickSlide","index","select","this","on","onChange","options","initialIndex","cellAlign","prevNextButtons","pageDots","getTotalValue","forEach","flickityRef","ref","borrowed","lent","Component","DebtSection","draggable","getCurrentUserId","firebase","Firebase","initializeApp","setIndex","ByMaximumSum","setData","usePlatform","useEffect","database","snapshot","val","fetchData","ByExpirationDate","entries","element","key","friendId","onShowPopout","iosCloseItem","autoclose","onClose","undefined","remove","Date","unix","filter","CatalogPanel","fixed","AppPanel","onShowModal","ui","initialValues","validate","errors","updateModalHeight","runMutation","year","month","day","then","onCancelModal","getFriendsOptions","label","push","left","dynamicContentHeight","onSubmit","setFieldValue","name","field","meta","top","bottom","touched","error","defaultChecked","status","min","max","defaultValue","onDateChange","date","renderOption","option","restProps","event","stretched","TabRoute","activeModal","setActiveModal","popout","setPopout","modal","activePanel","modalName","CatalogView","dispatch","bindActionCreators","App","activeStory","setActiveStory","onStoryChange","e","currentTarget","dataset","story","tabbar","Catalog","data-story","text","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ad5f6593.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyCumX0HBTrTWuiyCOkwfSmI_ro5pGEGCzM\",\n  authDomain: \"finbox-mini-app.firebaseapp.com\",\n  databaseURL: \"https://finbox-mini-app-default-rtdb.firebaseio.com\",\n  projectId: \"finbox-mini-app\",\n  storageBucket: \"finbox-mini-app.appspot.com\",\n  messagingSenderId: \"261332152446\",\n  appId: \"1:261332152446:web:1b0638cbb10e860a86a82f\"\n};\n\nexport default config;","export const SET_USER = 'SET_USER';\nexport const FETCH_ACCESS_TOKEN = 'FETCH_ACCESS_TOKEN';","import * as constants from '../../constants/user';\nimport { UserAction } from '../../actions/user/types';\nimport { IUserState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IUserState = {\n  access_token: ''\n};\n\n/**\n * The user reducer.\n *\n * @param state\n * @param action\n */\nexport function userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case constants.SET_USER: {\n      return action.payload.user;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return user state.\n *\n * @param state\n */\nexport const getUserState = (state: IState) => state.user;","export const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';","import * as constants from '../../constants/friends';\nimport { FriendsAction } from '../../actions/friends/types';\nimport { IFriendsState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IFriendsState = [\n  {\n    id: 5234123,\n    first_name: 'Test',\n    last_name: 'Test',\n    photo_100: '...',\n    track_code: '...',\n    nickname: '...'\n  },\n  {\n    id: 876543,\n    first_name: 'Test 2',\n    last_name: 'Test 2',\n    photo_100: '...',\n    track_code: '...',\n    nickname: '...'\n  }\n];\n\n/**\n * The friends reducer.\n *\n * @param state\n * @param action\n */\nexport function friendsReducer(state = initialState, action: FriendsAction) {\n  switch (action.type) {\n    case constants.SET_FRIENDS: {\n      return action.payload.friends;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return friends state.\n *\n * @param state\n */\nexport const getFriendsState = (state: IState) => state.friends;","import { combineReducers } from 'redux';\nimport { IState } from '../types/state';\n\n/**\n * Reducer's.\n */\nimport { userReducer } from './user';\nimport { friendsReducer } from \"./friends\";\n\n/**\n * The root reducer.\n */\nexport default combineReducers<IState>({\n  user: userReducer,\n  friends: friendsReducer\n})","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetUserAction } from '../../actions/user/types';\nimport { SET_USER } from '../../constants/user';\n\nexport function* fetchAccessTokenWorker() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const appId = urlParams.get('vk_app_id');\n\n  const response = yield bridge.send('VKWebAppGetAuthToken', {\n    'app_id': Number(appId),\n    'scope': 'friends'\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetUserAction>({\n    type: SET_USER,\n    payload: {\n      user: {\n        access_token: response.access_token\n      }\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { FETCH_ACCESS_TOKEN } from '../../constants/user';\nimport { fetchAccessTokenWorker } from '../worker/fetchAccessToken';\n\nexport function* fetchAccessTokenWatcher() {\n  yield takeLatest(FETCH_ACCESS_TOKEN, fetchAccessTokenWorker);\n}","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetFriendsAction } from '../../actions/friends/types';\nimport { SET_FRIENDS } from '../../constants/friends';\nimport { store } from \"../..\";\n\nexport function* fetchFriendsWorker() {\n  const data = yield bridge.send('VKWebAppCallAPIMethod', {\n    method: 'friends.get',\n    params: {\n      order: 'hints',\n      fields: 'nickname,photo_100',\n      v: '5.21',\n      access_token: store.getState().user.access_token\n    }\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetFriendsAction>({\n    type: SET_FRIENDS,\n    payload: {\n      friends: data.response.items\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { SET_USER } from '../../constants/user';\nimport { fetchFriendsWorker } from '../worker/fetchFriends';\n\nexport function* fetchFriendsWatcher() {\n  yield takeLatest(SET_USER, fetchFriendsWorker);\n}","import { all } from 'redux-saga/effects';\nimport { fetchAccessTokenWatcher } from './fetchAccessToken';\nimport { fetchFriendsWatcher } from './fetchFriends';\n\nexport default function* watcher() {\n  yield all([\n    fetchAccessTokenWatcher(),\n    fetchFriendsWatcher()\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport watcher from './sagas/watcher';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\nconst history = createBrowserHistory();\n\nsagaMiddleware.run(watcher);\n\nexport { store, history };","import * as constants from '../../constants/user';\nimport { ISetUserAction, UserAction } from './types';\n\n/**\n * The set user action.\n *\n * @param payload\n */\nexport function setUser(payload: ISetUserAction['payload']): UserAction {\n  return {\n    type: constants.SET_USER,\n    payload\n  };\n}\n\n/**\n * The fetch access token action.\n */\nexport function fetchAccessToken(): UserAction {\n  return {\n    type: constants.FETCH_ACCESS_TOKEN,\n  };\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { Card } from '@vkontakte/vkui';\nimport { IDashboardCardProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst dashboardCard = block('dashboard-card');\n\n/**\n * The dashboard card module.\n *\n * @param props\n * @constructor\n */\nexport default function DashboardCard(props: IDashboardCardProps): React.ReactElement {\n  return (\n    <Card className={dashboardCard()} onClick={() => props.onClick && props.onClick()}>\n      <div className={dashboardCard('container', { selected: props.selected })}>\n        {props.title && <span className={dashboardCard('subtitle')}>{props.title}</span>}\n        {props.subtitle && <strong className={dashboardCard('title')}>{props.subtitle}</strong>}\n        {props.children && <div className={dashboardCard('children')}>{props.children}</div>}\n      </div>\n    </Card>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, Group, Header, SimpleCell, Spinner } from '@vkontakte/vkui';\nimport { IState } from \"../../store/types/state\";\nimport { getFriendsState } from \"../../store/reducers/friends\";\nimport { IContactsProps } from './types';\n\n/**\n * The contacts component.\n *\n * @constructor\n */\nfunction Contacts(props: IContactsProps): React.ReactElement {\n  /**\n   * The function render friends.\n   * @param friends\n   */\n  function renderFriends(friends: IContactsProps['friends']) {\n    return friends.map((friend) => (\n      <SimpleCell before={<Avatar src={friend.photo_100} size={48} />}>\n        {friend.first_name} {friend.last_name}\n      </SimpleCell>\n    ))\n  }\n\n  return (\n    <Group header={<Header mode=\"primary\">Контакты</Header>} mode=\"plain\">\n      {props.friends.length > 0 ? renderFriends(props.friends) : <Spinner size=\"medium\" />}\n    </Group>\n  )\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(Contacts);","/**\n * The app modals.\n */\nexport enum AppModal {\n  AddDebt = 'add-debt'\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IContentFixProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst contactFix = block('contact-fix');\n\n/**\n * The content fix component.\n *\n * @param props\n * @constructor\n */\nexport default function ContentFix(props: IContentFixProps): React.ReactElement {\n  return (\n    <div className={contactFix()}>\n      {props.children}\n    </div>\n  );\n}","import React from \"react\";\nimport { Icon24Add } from '@vkontakte/icons';\nimport { block } from 'bem-cn';\nimport { IAddButtonProps } from './types';\nimport { AppModal } from '../../views/App/types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst addButton = block('add-button');\n\n/**\n * The add button component.\n *\n * @constructor\n */\nexport default function AddButton(props: IAddButtonProps): React.ReactElement {\n  return (\n    <button type=\"button\" className={addButton()} onClick={() => props.onModalShow && props.onModalShow(AppModal.AddDebt)}>\n      <Icon24Add color=\"#fff\" />\n    </button>\n  );\n}","import IFriend from \"../store/types/friend\";\n\n/**\n * The get user name util.\n *\n * @param first_name\n * @param last_name\n */\nexport default function getUserName(first_name: IFriend['first_name'], last_name: IFriend['last_name']): string {\n  return `${first_name} ${last_name}`;\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IDebtCardProps } from './types';\nimport getUserName from \"../../utils/getUserName\";\nimport './styles.scss';\nimport {Avatar} from \"@vkontakte/vkui\";\nimport moment from 'moment';\n\n/**\n * The class generator.\n */\nconst debtCard = block('debt-card');\n\n/**\n * The debt card component.\n *\n * @param props\n * @constructor\n */\nexport default function DebtCard(props: IDebtCardProps): React.ReactElement {\n  const userName = getUserName(props.first_name, props.last_name);\n\n  return (\n    <div className={debtCard()} onClick={() => props.onClick && props.onClick(props.itemKey)}>\n      <Avatar src={props.photo_100} size={48} />\n      <div className={debtCard('content')}>\n        <span className={debtCard('username')}>\n          {userName}\n        </span>\n        <div className={debtCard('datestamp')}>\n          <span className={debtCard('date')}>\n            {moment(props.createdAt).format('DD-MM-YYYY')}\n          </span>\n          {props.expirationDate && <span className={debtCard('date', { 'return': true })}>\n            {moment(props.expirationDate).format('DD-MM-YYYY')}\n          </span>}\n        </div>\n      </div>\n      <span className={debtCard('price')}>\n        {props.sum} ₽\n      </span>\n    </div>\n  );\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport './styles.scss';\nimport {DebtCard} from \"..\";\nimport { Spinner } from '@vkontakte/vkui';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {connect} from \"react-redux\";\nimport {IDebtContainerProps} from './types';\nimport IFriend from \"../../store/types/friend\";\nimport moment from 'moment';\n\n/**\n * The class generator.\n */\nconst debtContainer = block('debt-container');\n\n/**\n * The debt container component.\n *\n * @constructor\n */\nfunction DebtContainer(props: IDebtContainerProps): React.ReactElement {\n  const [sortType, setSortType] = React.useState('max-amount');\n\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  function getFriendById(id: IFriend['id']): IFriend | undefined {\n    return props.friends.find((friend) => friend.id === id);\n  }\n\n  function renderDebt(data: any) {\n    return data.map((node: any) => {\n      const friend = getFriendById(Number(node.contactId));\n      return friend && (\n        <DebtCard\n          itemKey=\"\"\n          first_name={friend.first_name}\n          last_name={friend.last_name}\n          photo_100={friend.photo_100}\n          sum={0}\n          createdAt=\"0000\"\n          expirationDate={null}\n        />\n      ) || <React.Fragment/>\n    });\n  }\n\n  function changeSortType() {\n    switch (sortType) {\n      case 'max-amount': return setSortType('return-date');\n      case 'return-date': return setSortType('max-amount');\n    }\n  }\n\n  console.log('onCHange');\n  console.log('onCHange123123');\n\n  return (\n    <div className={debtContainer()}>\n      <span className={debtContainer('header')}>\n        Займы по <button type=\"button\" onClick={() => changeSortType()}>\n        {sortType === 'max-amount' && 'большей сумме ₽'}\n        {sortType === 'return-date' && 'дате возврата'}\n      </button>\n      </span>\n      <div className={debtContainer('content')}>\n        {sortType === 'max-amount' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => {\n                  return Number(b.summary) - Number(a.summary);\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n        {sortType === 'return-date' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => {\n                  return moment(a.returnDate).diff(moment(b.returnDate))\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(DebtContainer);","import React from 'react';\nimport { block } from 'bem-cn';\nimport {Avatar} from \"@vkontakte/vkui\";\nimport './styles.scss';\n\nconst catalogItem = block('catalog-item');\n\nexport default function CatalogItem(props: {\n  href: string;\n  avatarSrc: string;\n  title: string;\n  value: string;\n}) {\n  return (\n    <a href={props.href} target=\"_blank\" rel=\"noreferrer\" className={catalogItem()}>\n      <Avatar src={props.avatarSrc} size={48} />\n      <span className={catalogItem('title')}>{props.title}</span>\n      <span className={catalogItem('value')}>{props.value}</span>\n    </a>\n  );\n}","import { SelectOption } from \"@vkontakte/vkui/dist/components/CustomSelect/CustomSelect\";\nimport { DateFormat } from \"@vkontakte/vkui/dist/components/DatePicker/DatePicker\";\nimport { IFriendsState } from '../../store/reducers/friends/types';\nimport IFriend from '../../store/types/friend';\nimport IModalProps from '../../types/modalProps';\n\n/**\n * The debt types.\n */\nexport enum DebtType {\n  'borrowed' = 'borrowed',\n  'lent' = 'lent'\n}\n\n/**\n * The add debt form values.\n */\nexport interface IAddDebtValues {\n  type: DebtType | null;\n  sum: number | null;\n  friendId: IFriend['id'] | null;\n  expirationDate: DateFormat | null;\n}\n\n/**\n * The friend option.\n */\nexport type IFriendOption = SelectOption;\n\n/**\n * The add debt modal props interface.\n */\nexport default interface IAddDebtModalProps extends IModalProps {\n  friends: IFriendsState;\n}","import {IFriendsState} from \"../../store/reducers/friends/types\";\nimport {ViewProps} from \"@vkontakte/vkui/dist/components/View/View\";\n\nexport enum SortType {\n  ByMaximumSum,\n  ByExpirationDate\n}\n\nexport default interface IDebtControllerProps {\n  friends: IFriendsState;\n  onShowPopout?: (popout: ViewProps['popout']) => void;\n}","import React from 'react';\nimport Flickity, { FlickityOptions } from 'react-flickity-component';\nimport { DashboardCard } from '../../../Dashboard/modules';\nimport { DebtType } from \"../../../../modals/AddDebt/types\";\nimport IDebtCarousel from './types';\n\nexport default class DebtCarousel extends React.Component<IDebtCarousel> {\n  public instance: Flickity | undefined;\n\n  componentDidMount() {\n    this.instance?.on('change', (index: number) => {\n      this.props.onChange && this.props.onChange(index);\n    });\n  }\n\n  onClickSlide = (index: number) => {\n    this.instance?.select(index);\n  }\n\n  render() {\n    const options: FlickityOptions = {\n      initialIndex: this.props.initialIndex || 0,\n      cellAlign: 'left',\n      prevNextButtons: false,\n      pageDots: false\n    };\n\n    /**\n     * The function render total value.\n     * @param type\n     * @param data\n     */\n    function getTotalValue(type: DebtType, data: {} | null) {\n      let sum = 0;\n\n      if (data !== null) {\n        Object.values(data).forEach((node: any) => {\n          if (node.type === type) {\n            sum = Number(node.sum) + sum;\n          }\n        });\n      }\n\n      return `${sum} ₽`;\n    }\n\n    return (\n      <Flickity flickityRef={(ref) => this.instance = ref} options={options}>\n        <div className=\"carousel-cell carousel-cell-1\">\n          <DashboardCard\n            title=\"Выданные займы\"\n            subtitle={getTotalValue(DebtType.borrowed, this.props.data)}\n            onClick={() => this.onClickSlide(0)}\n          />\n        </div>\n        <div className=\"carousel-cell carousel-cell-2\">\n          <DashboardCard\n            title=\"Полученные займы\"\n            subtitle={getTotalValue(DebtType.lent, this.props.data)}\n            onClick={() => this.onClickSlide(1)}\n          />\n        </div>\n      </Flickity>\n    );\n  }\n}","import React from 'react';\nimport Flickity, { FlickityOptions } from 'react-flickity-component';\nimport { DashboardCard } from '../../../Dashboard/modules';\nimport { DebtType } from \"../../../../modals/AddDebt/types\";\nimport IDebtSection from './types';\n\nexport default class  DebtSection extends React.Component<IDebtSection> {\n  public instance: Flickity | undefined;\n\n  componentDidMount() {\n    this.instance?.on('change', (index: number) => {\n      this.props.onChange && this.props.onChange(index);\n    });\n  }\n\n  render() {\n    const options: FlickityOptions = {\n      initialIndex: 0,\n      cellAlign: 'left',\n      draggable: false,\n      prevNextButtons: false,\n      pageDots: false\n    };\n\n    /**\n     * The function render total value.\n     * @param type\n     * @param data\n     */\n    function getTotalValue(type: DebtType, data: {} | null) {\n      let sum = 0;\n\n      if (data !== null) {\n        Object.values(data).forEach((node: any) => {\n          if (node.type === type) {\n            sum = Number(node.sum) + sum;\n          }\n        });\n      }\n\n      return `${sum} ₽`;\n    }\n\n    return (\n      <Flickity flickityRef={(ref) => this.instance = ref} options={options}>\n        <div className=\"carousel-cell carousel-cell-1\">\n          <DashboardCard\n            title=\"Выданные займы\"\n            subtitle={getTotalValue(DebtType.borrowed, this.props.data)}\n            onClick={() => this.props.onChange && this.props.onChange(0)}\n            selected={this.props.index === 0}\n          />\n        </div>\n        <div className=\"carousel-cell carousel-cell-2\">\n          <DashboardCard\n            title=\"Полученные займы\"\n            subtitle={getTotalValue(DebtType.lent, this.props.data)}\n            onClick={() => this.props.onChange && this.props.onChange(1)}\n            selected={this.props.index === 1}\n          />\n        </div>\n      </Flickity>\n    );\n  }\n}","/**\n * The function return current user id.\n */\nexport default function getCurrentUserId(): string | null {\n  const params = new URLSearchParams(window.location.search);\n  return params.get('vk_user_id');\n}","import Firebase from 'firebase';\nimport config from './config';\n\nconst firebase = Firebase.initializeApp(config);\nexport default firebase;","import React from 'react';\nimport {block} from \"bem-cn\";\nimport {ActionSheet, ActionSheetItem, usePlatform} from '@vkontakte/vkui';\nimport {DebtCarousel, DebtSection} from './modules';\nimport {getCurrentUserId} from \"../../utils\";\nimport IDebtControllerProps, {SortType} from './types';\nimport {connect} from \"react-redux\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {DebtCard} from \"../index\";\nimport firebase from \"../../firebase\";\nimport moment from 'moment';\nimport {DebtType} from \"../../modals/AddDebt/types\";\n\nconst debtContainer = block('debt-container');\n\nfunction DebtController(props: IDebtControllerProps): React.ReactElement {\n  const [index, setIndex] = React.useState<number>(0);\n  const [sortType, setSortType] = React.useState<SortType>(SortType.ByMaximumSum);\n  const [data, setData] = React.useState<{} | null>(null);\n  const platform = usePlatform();\n\n  function fetchData(): void {\n    const userId = getCurrentUserId();\n\n    if (userId !== null) {\n      firebase.database().ref(userId).on('value', (snapshot) => {\n        const value = snapshot.val();\n        setData(value);\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  function getCurrentType(): DebtType {\n    if (index === 0) {\n      return DebtType.borrowed;\n    } else return DebtType.lent;\n  }\n\n  /**\n   * The function change sort type.\n   */\n  function changeSortType(): void {\n    if (sortType === SortType.ByMaximumSum) {\n      return setSortType(SortType.ByExpirationDate);\n    } else {\n      return setSortType(SortType.ByMaximumSum);\n    }\n  }\n\n  function renderData() {\n    return data === null ? (<div/>) : Object.entries(data).map((element) => {\n      const key = element[0];\n      const value: any = element[1];\n      const friend = props.friends.find((friend) => friend.id === value.friendId);\n\n      return friend && (\n        <DebtCard\n          itemKey={key}\n          type={value.type}\n          first_name={friend.first_name || ''}\n          last_name={friend.last_name || ''}\n          photo_100={friend.photo_100 || ''}\n          sum={value.sum}\n          createdAt={value.createdAt}\n          expirationDate={value.expirationDate}\n          onClick={(itemKey) => props.onShowPopout && props.onShowPopout(\n            //@ts-ignore\n            <ActionSheet\n              iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\n              onClose={() => props.onShowPopout && props.onShowPopout(undefined)}\n            >\n              <ActionSheetItem autoclose mode=\"destructive\" onClick={() => {\n                firebase.database().ref(`${getCurrentUserId()}/${itemKey}`).remove();\n              }}>\n                Удалить\n              </ActionSheetItem>\n            </ActionSheet>\n          )}\n        />\n      ) || <div/>\n    }).sort((a: any, b: any) => {\n      if (sortType === SortType.ByMaximumSum) {\n        return Number(b.props.sum) - Number(a.props.sum);\n      } else {\n        return moment(new Date(a.props.expirationDate)).unix() - moment(new Date(b.props.expirationDate)).unix()\n      }\n    }).filter((element: any) => {\n      return element.props.type === getCurrentType();\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"debt-desktop\">\n        <DebtSection data={data} index={index} onChange={(index) => setIndex(index)} />\n      </div>\n      <div className=\"debt-mobile\">\n        <DebtCarousel data={data} onChange={(index) => setIndex(index)} />\n      </div>\n      <div className={debtContainer()}>\n        <div className={debtContainer('header')}>\n          <div className={debtContainer('title')}>\n            Займы по {' '}\n            <button type=\"button\" onClick={() => changeSortType()}>\n              {sortType === SortType.ByMaximumSum && 'большей сумме ₽'}\n                {sortType === SortType.ByExpirationDate && 'дате возврата'}\n            </button>\n          </div>\n        </div>\n        <div className={debtContainer('content')}>\n          {renderData()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(DebtController);","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport IPanelProps from \"../../types/panelProps\";\nimport {CatalogItem, ContentFix} from \"../../components\";\n\n/**\n * The catalog panel.\n *\n * @param props\n * @constructor\n */\nexport default function CatalogPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader fixed={false}>Каталог</PanelHeader>\n      <ContentFix>\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n      </ContentFix>\n    </Panel>\n  );\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport { ContentFix, AddButton, DebtController } from '../../components';\nimport IPanelProps from \"../../types/panelProps\";\n\n/**\n * The app panel.\n *\n * @param props\n * @constructor\n */\nexport default function AppPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader fixed={false}>Все займы</PanelHeader>\n      <AddButton onModalShow={props.onShowModal} />\n      <ContentFix>\n        <DebtController onShowPopout={props.onShowPopout} />\n      </ContentFix>\n    </Panel>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FirebaseDatabaseMutation } from '@react-firebase/database';\nimport moment from 'moment';\nimport * as formik from 'formik';\nimport * as ui from '@vkontakte/vkui';\nimport * as icons from \"@vkontakte/icons\";\nimport { getCurrentUserId, getUserName } from '../../utils';\nimport { getFriendsState } from '../../store/reducers/friends';\nimport { RunMutation } from '@react-firebase/database/dist/components/FirebaseDatabaseMutation';\nimport IAddDebtModalProps, { IAddDebtValues, IFriendOption, DebtType } from './types';\nimport { IState } from '../../store/types/state';\n\nfunction AddDebtModal(props: IAddDebtModalProps): React.ReactElement {\n  /**\n   * The initial form values.\n   */\n  const initialValues: IAddDebtValues = {\n    type: DebtType.borrowed,\n    sum: null,\n    friendId: null,\n    expirationDate: null\n  };\n\n  /**\n   * The function validate values before submit.\n   * @param values\n   */\n  function validate(values: IAddDebtValues): formik.FormikErrors<IAddDebtValues> {\n    const errors: formik.FormikErrors<IAddDebtValues> = {};\n    props.updateModalHeight && props.updateModalHeight();\n\n    if (!values.type) {\n      errors.type = 'Выберите тип долга';\n    } else if (!values.sum) {\n      errors.sum = 'Введите сумму';\n    } else if (!values.friendId || values.friendId === -1) {\n      errors.friendId = 'Выберите контакт из списка';\n    }\n\n    return errors;\n  }\n\n  /**\n   * The handle of form submit.\n   */\n  async function onSubmit(values: IAddDebtValues, runMutation: RunMutation) {\n    await runMutation({\n      ...values,\n      createdAt: moment().format('YYYY-MM-DD'),\n      expirationDate: values.expirationDate && moment(new Date(values.expirationDate.year, values.expirationDate.month - 1, values.expirationDate.day)).format('YYYY-MM-DD')\n    }).then(() => props.onCancelModal && props.onCancelModal());\n  }\n\n  /**\n   * The function return friends options.\n   */\n  function getFriendsOptions(): IFriendOption[] {\n    const options: IFriendOption[] = [\n      { value: -1, label: 'Не выбрано' }\n    ];\n\n    props.friends.forEach((friend) => {\n      options.push({\n        value: friend.id,\n        label: getUserName(friend.first_name, friend.last_name),\n        photo_100: friend.photo_100\n      });\n    });\n\n    return options;\n  }\n\n  return (\n    <ui.ModalPage id={props.id} header={(\n      <ui.ModalPageHeader left={\n        <ui.PanelHeaderButton onClick={() => props.onCancelModal && props.onCancelModal()}>\n          <icons.Icon24Cancel />\n        </ui.PanelHeaderButton>\n      }>Добавить долг</ui.ModalPageHeader>\n    )} dynamicContentHeight={props.dynamicContentHeight}>\n      <FirebaseDatabaseMutation path={getCurrentUserId() || '/'} type=\"push\">\n        {({ runMutation }) => (\n          <formik.Formik initialValues={initialValues} validate={validate} onSubmit={(values) => onSubmit(values, runMutation)}>\n            {({ setFieldValue }: formik.FormikProps<IAddDebtValues>) => (\n              <formik.Form>\n                <formik.Field name=\"type\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Тип долга*\" bottom={meta.touched && meta.error}>\n                      <ui.Radio {...field} value={DebtType.borrowed} defaultChecked>\n                        Дал в долг\n                      </ui.Radio>\n                      <ui.Radio {...field} value={DebtType.lent}>\n                        Взял в долг\n                      </ui.Radio>\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <formik.Field name=\"expirationDate\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Дата возврата\" bottom={meta.touched && meta.error} status={meta.touched && meta.error ? 'error' : undefined}>\n                      <ui.DatePicker\n                        {...field}\n                        min={{\n                          day: Number(moment().format('D')),\n                          month: Number(moment().format('M')),\n                          year: Number(moment().format('YYYY'))\n                        }}\n                        max={{\n                          day: Number(moment().format('D')),\n                          month: Number(moment().format('M')),\n                          year: Number(moment().format('YYYY')) + 1000\n                        }}\n                        defaultValue={{\n                          day: Number(moment().format('D')),\n                          month: Number(moment().format('M')),\n                          year: Number(moment().format('YYYY'))\n                        }}\n                        onDateChange={(date) => {\n                          return setFieldValue(field.name, date);\n                        }}\n                      />\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <formik.Field name=\"friendId\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Выберите друга*\" bottom={meta.touched && meta.error} status={meta.touched && meta.error ? 'error' : undefined}>\n                      <ui.Select\n                        {...field}\n                        options={getFriendsOptions()}\n                        renderOption={({ option, ...restProps }) => (\n                          <ui.CustomSelectOption\n                            {...restProps}\n                            before={option.photo_100 && (\n                              <ui.Avatar\n                                src={option.photo_100}\n                                size={24}\n                              />\n                            )}\n                          />\n                        )}\n                        onChange={(event) => {\n                          return setFieldValue(field.name, Number(event.target.value));\n                        }}\n                      />\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <formik.Field name=\"sum\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Сумма*\" bottom={meta.touched && meta.error} status={meta.touched && meta.error ? 'error' : undefined}>\n                      <ui.Input {...field} type=\"number\" min={1} />\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <ui.FormItem>\n                  <ui.Button type=\"submit\" mode=\"primary\" size=\"l\" before={<icons.Icon24Add />} stretched>\n                    Добавить\n                  </ui.Button>\n                </ui.FormItem>\n              </formik.Form>\n            )}\n          </formik.Formik>\n        )}\n      </FirebaseDatabaseMutation>\n    </ui.ModalPage>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(ui.withModalRootContext(AddDebtModal));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { View, ModalRoot } from '@vkontakte/vkui';\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport { getFriendsState } from \"../../store/reducers/friends\";\nimport { AppPanel } from \"../../panels\";\nimport { AddDebtModal } from '../../modals';\nimport { IState } from \"../../store/types/state\";\nimport { IFriendsState } from \"../../store/reducers/friends/types\";\nimport { AppModal } from './types';\nimport IModal from \"../../types/modal\";\n\n/**\n * The app view.\n *\n * @constructor\n */\nfunction AppView(props: ViewProps & PanelProps & { friends: IFriendsState }): React.ReactElement {\n  const [activeModal, setActiveModal] = React.useState<IModal | null>(null);\n  const [popout, setPopout] = React.useState<ViewProps['popout']>(undefined);\n\n  /**\n   * The function show modal.\n   * @param modalName\n   */\n  function onShowModal(modalName: string): void {\n    return setActiveModal(modalName);\n  }\n\n  /**\n   * The function show popout.\n   * @param popout\n   */\n  function onShowPopout(popout: ViewProps['popout']): void {\n    return setPopout(popout);\n  }\n\n  /**\n   * The function cancel modal.\n   */\n  function onCancelModal(): void {\n    return setActiveModal(null);\n  }\n\n  const modal = (\n    <ModalRoot activeModal={activeModal} onClose={onCancelModal}>\n      <AddDebtModal id={AppModal.AddDebt} onCancelModal={onCancelModal} dynamicContentHeight />\n    </ModalRoot>\n  );\n\n  return (\n    <View id={props.id} modal={modal} popout={popout} activePanel={props.activePanel}>\n      <AppPanel id={props.id} onShowModal={onShowModal} onShowPopout={onShowPopout} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(AppView);","/**\n * The tab routes with names.\n */\nenum TabRoute {\n  'Catalog' = 'catalog',\n  'App' = 'app'\n}\n\nexport default TabRoute;","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport { CatalogPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\n\n/**\n * The catalog view.\n *\n * @constructor\n */\nexport default function CatalogView(props: ViewProps & PanelProps): React.ReactElement {\n  return (\n    <View id={props.id} activePanel={props.activePanel}>\n      <CatalogPanel id={props.id} />\n    </View>\n  );\n}","import React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppRoot, Epic, Tabbar, TabbarItem, View } from '@vkontakte/vkui';\nimport { Icon28BookOutline, Icon28ServicesOutline } from '@vkontakte/icons';\nimport { fetchAccessToken } from './store/actions/user';\nimport { CatalogView, AppView } from './views';\nimport { IRouterProps, IStory, TabRoute } from './types';\n\n/**\n * The app router.\n *\n * @constructor\n */\nfunction Router(props: IRouterProps): React.ReactElement {\n  const [activeStory, setActiveStory] = React.useState<IStory>(TabRoute.App);\n\n  React.useEffect(() => {\n    props.fetchAccessToken();\n  }, [props]);\n\n  function onStoryChange(e: any): void {\n    return setActiveStory(e.currentTarget.dataset.story);\n  }\n\n  return (\n    <AppRoot>\n      <Epic activeStory={activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.Catalog}\n            data-story={TabRoute.Catalog}\n            text=\"Займы\"\n          ><Icon28BookOutline /></TabbarItem>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.App}\n            data-story={TabRoute.App}\n            text=\"Трекер\"\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n        <CatalogView id={TabRoute.Catalog} activePanel={TabRoute.Catalog} />\n        <AppView id={TabRoute.App} activePanel={TabRoute.App} />\n      </Epic>\n    </AppRoot>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAccessToken: bindActionCreators(fetchAccessToken, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(Router);","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ConfigProvider, AdaptivityProvider } from '@vkontakte/vkui';\nimport firebase from 'firebase';\nimport config from './firebase/config';\nimport { FirebaseDatabaseProvider } from '@react-firebase/database';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Router from './router';\n\n/**\n * The root app component.\n *\n * @constructor\n */\nexport default function App(): React.ReactElement {\n  React.useEffect(() => {\n    bridge.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        //@ts-ignore\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n  }, []);\n\n  return (\n    <FirebaseDatabaseProvider firebase={firebase} {...config}>\n      <Provider store={store}>\n        <ConfigProvider>\n          <AdaptivityProvider>\n            <Router />\n          </AdaptivityProvider>\n        </ConfigProvider>\n      </Provider>\n    </FirebaseDatabaseProvider>\n  );\n}","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './styles/index.css';\nimport bridge from \"@vkontakte/vk-bridge\";\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById('root'));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}"],"sourceRoot":""}