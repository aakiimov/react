{"version":3,"sources":["firebase/config.ts","store/constants/user.ts","store/reducers/user/index.ts","store/constants/friends.ts","store/reducers/friends/index.ts","store/reducers/index.ts","store/sagas/worker/fetchAccessToken.ts","store/sagas/watcher/fetchAccessToken.ts","store/sagas/worker/fetchFriends.ts","store/sagas/watcher/fetchFriends.ts","store/sagas/watcher/index.ts","store/index.ts","store/actions/user/index.ts","panels/Catalog/Catalog.tsx","components/Dashboard/modules/Card/Card.tsx","components/Dashboard/Dashboard.tsx","components/Contacts/Contacts.tsx","components/ContentFix/ContentFix.tsx","components/AddButton/AddButton.tsx","components/DebtCard/DebtCard.tsx","utils/getUserName.ts","components/DebtContainer/DebtContainer.tsx","panels/App/App.tsx","views/App/App.tsx","types/tabRoute.ts","views/Catalog/Catalog.tsx","router.tsx","app.tsx","index.tsx"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SET_USER","FETCH_ACCESS_TOKEN","initialState","access_token","SET_FRIENDS","getFriendsState","state","friends","combineReducers","user","action","type","constants","payload","fetchAccessTokenWorker","queryString","window","location","search","urlParams","URLSearchParams","get","bridge","send","Number","catch","alert","response","put","fetchAccessTokenWatcher","takeLatest","fetchFriendsWorker","method","params","order","fields","v","store","getState","data","items","fetchFriendsWatcher","watcher","all","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","logger","createBrowserHistory","run","fetchAccessToken","CatalogPanel","props","id","dashboardCard","block","DashboardCard","className","title","subtitle","Dashboard","userId","getTotal","values","summary","Object","forEach","item","mode","size","path","isLoading","value","connect","header","length","map","friend","before","src","photo_100","first_name","last_name","contactFix","ContentFix","children","addButton","AddButton","onClick","onModalShow","color","debtCard","DebtCard","userName","debtContainer","React","useState","sortType","setSortType","renderDebt","node","contactId","find","Fragment","console","log","changeSortType","sort","a","b","AppPanel","onShowModal","TabRoute","activeModal","setActiveModal","returnDate","formState","setFormState","onCancelModal","modal","onClose","left","right","runMutation","createdAt","moment","name","defaultChecked","undefined","onChange","e","target","top","defaultValue","placeholder","onBlur","options","result","push","label","avatar","createFriendsOptions","renderOption","option","restProps","min","day","month","year","max","onDateChange","date","dayPlaceholder","monthPlaceholder","yearPlaceholder","activePanel","modalName","CatalogView","dispatch","bindActionCreators","App","activeStory","setActiveStory","onStoryChange","currentTarget","dataset","story","useEffect","tabbar","selected","Catalog","data-story","firebase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76e1aaf6.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyCumX0HBTrTWuiyCOkwfSmI_ro5pGEGCzM\",\n  authDomain: \"finbox-mini-app.firebaseapp.com\",\n  databaseURL: \"https://finbox-mini-app-default-rtdb.firebaseio.com\",\n  projectId: \"finbox-mini-app\",\n  storageBucket: \"finbox-mini-app.appspot.com\",\n  messagingSenderId: \"261332152446\",\n  appId: \"1:261332152446:web:1b0638cbb10e860a86a82f\"\n};\n\nexport default config;","export const SET_USER = 'SET_USER';\nexport const FETCH_ACCESS_TOKEN = 'FETCH_ACCESS_TOKEN';","import * as constants from '../../constants/user';\nimport { UserAction } from '../../actions/user/types';\nimport { IUserState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IUserState = {\n  access_token: ''\n};\n\n/**\n * The user reducer.\n *\n * @param state\n * @param action\n */\nexport function userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case constants.SET_USER: {\n      return action.payload.user;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return user state.\n *\n * @param state\n */\nexport const getUserState = (state: IState) => state.user;","export const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';","import * as constants from '../../constants/friends';\nimport { FriendsAction } from '../../actions/friends/types';\nimport { IFriendsState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IFriendsState = [];\n\n/**\n * The friends reducer.\n *\n * @param state\n * @param action\n */\nexport function friendsReducer(state = initialState, action: FriendsAction) {\n  switch (action.type) {\n    case constants.SET_FRIENDS: {\n      return action.payload.friends;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return friends state.\n *\n * @param state\n */\nexport const getFriendsState = (state: IState) => state.friends;","import { combineReducers } from 'redux';\nimport { IState } from '../types/state';\n\n/**\n * Reducer's.\n */\nimport { userReducer } from './user';\nimport { friendsReducer } from \"./friends\";\n\n/**\n * The root reducer.\n */\nexport default combineReducers<IState>({\n  user: userReducer,\n  friends: friendsReducer\n})","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetUserAction } from '../../actions/user/types';\nimport { SET_USER } from '../../constants/user';\n\nexport function* fetchAccessTokenWorker() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const appId = urlParams.get('vk_app_id');\n\n  const response = yield bridge.send('VKWebAppGetAuthToken', {\n    'app_id': Number(appId),\n    'scope': 'friends'\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetUserAction>({\n    type: SET_USER,\n    payload: {\n      user: {\n        access_token: response.access_token\n      }\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { FETCH_ACCESS_TOKEN } from '../../constants/user';\nimport { fetchAccessTokenWorker } from '../worker/fetchAccessToken';\n\nexport function* fetchAccessTokenWatcher() {\n  yield takeLatest(FETCH_ACCESS_TOKEN, fetchAccessTokenWorker);\n}","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetFriendsAction } from '../../actions/friends/types';\nimport { SET_FRIENDS } from '../../constants/friends';\nimport { store } from \"../..\";\n\nexport function* fetchFriendsWorker() {\n  const data = yield bridge.send('VKWebAppCallAPIMethod', {\n    method: 'friends.get',\n    params: {\n      order: 'hints',\n      fields: 'nickname,photo_100',\n      v: '5.21',\n      access_token: store.getState().user.access_token\n    }\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetFriendsAction>({\n    type: SET_FRIENDS,\n    payload: {\n      friends: data.response.items\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { SET_USER } from '../../constants/user';\nimport { fetchFriendsWorker } from '../worker/fetchFriends';\n\nexport function* fetchFriendsWatcher() {\n  yield takeLatest(SET_USER, fetchFriendsWorker);\n}","import { all } from 'redux-saga/effects';\nimport { fetchAccessTokenWatcher } from './fetchAccessToken';\nimport { fetchFriendsWatcher } from './fetchFriends';\n\nexport default function* watcher() {\n  yield all([\n    fetchAccessTokenWatcher(),\n    fetchFriendsWatcher()\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport watcher from './sagas/watcher';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\nconst history = createBrowserHistory();\n\nsagaMiddleware.run(watcher);\n\nexport { store, history };","import * as constants from '../../constants/user';\nimport { ISetUserAction, UserAction } from './types';\n\n/**\n * The set user action.\n *\n * @param payload\n */\nexport function setUser(payload: ISetUserAction['payload']): UserAction {\n  return {\n    type: constants.SET_USER,\n    payload\n  };\n}\n\n/**\n * The fetch access token action.\n */\nexport function fetchAccessToken(): UserAction {\n  return {\n    type: constants.FETCH_ACCESS_TOKEN,\n  };\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport IPanelProps from \"../../types/panelProps\";\n\n/**\n * The catalog panel.\n *\n * @param props\n * @constructor\n */\nexport default function CatalogPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Каталог</PanelHeader>\n    </Panel>\n  );\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { Card as CardWrapper } from '@vkontakte/vkui';\nimport { IDashboardCardProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst dashboardCard = block('dashboard-card');\n\n/**\n * The dashboard card module.\n *\n * @param props\n * @constructor\n */\nexport default function DashboardCard(props: IDashboardCardProps): React.ReactElement {\n  return (\n    <CardWrapper>\n      <div className={dashboardCard()}>\n        {props.title && <span className={dashboardCard('subtitle')}>{props.title}</span>}\n        {props.subtitle && <strong className={dashboardCard('title')}>{props.subtitle}</strong>}\n      </div>\n    </CardWrapper>\n  );\n}","import React from 'react';\nimport { CardScroll, Group, Spinner } from '@vkontakte/vkui';\nimport { DashboardCard } from './modules';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\n\n/**\n * The dashboard component.\n *\n * @constructor\n */\nexport default function Dashboard(): React.ReactElement {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  function getTotal(values: any) {\n    let summary = 0;\n\n    Object.values(values).forEach((item: any) => {\n      summary = Number(item.summary) + summary;\n    });\n\n    return summary;\n  }\n\n  return (\n    <Group mode=\"plain\">\n      <CardScroll size=\"m\">\n        <FirebaseDatabaseNode path={`${userId}/borrowed`}>\n          {(data) => {\n            return data.isLoading ? (\n              <Spinner size=\"medium\" />\n            ) : data.value ? (\n              <DashboardCard\n                title=\"Полученные займы\"\n                subtitle={`${data.value && getTotal(data.value)} ₽`}\n              />\n            ) : (\n              <DashboardCard\n                title=\"Полученные займы\"\n                subtitle=\"0 ₽\"\n              />\n            )\n          }}\n        </FirebaseDatabaseNode>\n        <FirebaseDatabaseNode path={`${userId}/lent`}>\n          {(data) => {\n            return data.isLoading ? (\n              <Spinner size=\"medium\" />\n            ) : data.value ? (\n              <DashboardCard\n                title=\"Выданные займы\"\n                subtitle={`${data.value && getTotal(data.value)} ₽`}\n              />\n            ) : (\n              <DashboardCard\n                title=\"Выданные займы\"\n                subtitle=\"0 ₽\"\n              />\n            )\n          }}\n        </FirebaseDatabaseNode>\n      </CardScroll>\n    </Group>\n  )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, Group, Header, SimpleCell, Spinner } from '@vkontakte/vkui';\nimport { IState } from \"../../store/types/state\";\nimport { getFriendsState } from \"../../store/reducers/friends\";\nimport { IContactsProps } from './types';\n\n/**\n * The contacts component.\n *\n * @constructor\n */\nfunction Contacts(props: IContactsProps): React.ReactElement {\n  /**\n   * The function render friends.\n   * @param friends\n   */\n  function renderFriends(friends: IContactsProps['friends']) {\n    return friends.map((friend) => (\n      <SimpleCell before={<Avatar src={friend.photo_100} size={48} />}>\n        {friend.first_name} {friend.last_name}\n      </SimpleCell>\n    ))\n  }\n\n  return (\n    <Group header={<Header mode=\"primary\">Контакты</Header>} mode=\"plain\">\n      {props.friends.length > 0 ? renderFriends(props.friends) : <Spinner size=\"medium\" />}\n    </Group>\n  )\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(Contacts);","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IContentFixProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst contactFix = block('contact-fix');\n\n/**\n * The content fix component.\n *\n * @param props\n * @constructor\n */\nexport default function ContentFix(props: IContentFixProps): React.ReactElement {\n  return (\n    <div className={contactFix()}>\n      {props.children}\n    </div>\n  );\n}","import React from \"react\";\nimport { Icon24Add } from '@vkontakte/icons';\nimport { block } from 'bem-cn';\nimport { IAddButtonProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst addButton = block('add-button');\n\n/**\n * The add button component.\n *\n * @constructor\n */\nexport default function AddButton(props: IAddButtonProps): React.ReactElement {\n  return (\n    <button type=\"button\" className={addButton()} onClick={() => props.onModalShow && props.onModalShow('add-debt')}>\n      <Icon24Add color=\"#fff\" />\n    </button>\n  );\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IDebtCardProps } from './types';\nimport getUserName from \"../../utils/getUserName\";\nimport './styles.scss';\nimport {Avatar} from \"@vkontakte/vkui\";\n\n/**\n * The class generator.\n */\nconst debtCard = block('debt-card');\n\n/**\n * The debt card component.\n *\n * @param props\n * @constructor\n */\nexport default function DebtCard(props: IDebtCardProps): React.ReactElement {\n  const userName = getUserName(props.first_name, props.last_name);\n\n  return (\n    <div className={debtCard()}>\n      <Avatar src={props.photo_100} size={48} />\n      <div className={debtCard('content')}>\n        <span className={debtCard('username')}>\n          {userName}\n        </span>\n        <div className={debtCard('datestamp')}>\n          <span className={debtCard('date')}>12.12.2020</span>\n          <span className={debtCard('date')}>20.12.2020</span>\n        </div>\n      </div>\n      <span className={debtCard('price')}>\n        {props.summary} ₽\n      </span>\n    </div>\n  );\n}","import IFriend from \"../store/types/friend\";\n\n/**\n * The get user name util.\n *\n * @param first_name\n * @param last_name\n */\nexport default function getUserName(first_name: IFriend['first_name'], last_name: IFriend['last_name']): string {\n  return `${first_name} ${last_name}`;\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport './styles.scss';\nimport {DebtCard} from \"..\";\nimport { Spinner } from '@vkontakte/vkui';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {connect} from \"react-redux\";\nimport {IDebtContainerProps} from './types';\nimport IFriend from \"../../store/types/friend\";\nimport moment from 'moment';\n\n/**\n * The class generator.\n */\nconst debtContainer = block('debt-container');\n\n/**\n * The debt container component.\n *\n * @constructor\n */\nfunction DebtContainer(props: IDebtContainerProps): React.ReactElement {\n  const [sortType, setSortType] = React.useState('max-amount');\n\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  function getFriendById(id: IFriend['id']): IFriend | undefined {\n    return props.friends.find((friend) => friend.id === id);\n  }\n\n  function renderDebt(data: any) {\n    return data.map((node: any) => {\n      const friend = getFriendById(Number(node.contactId));\n      return friend && (\n        <DebtCard\n          first_name={friend.first_name}\n          last_name={friend.last_name}\n          photo_100={friend.photo_100}\n          summary={node.summary}\n        />\n      ) || <React.Fragment/>\n    });\n  }\n\n  function changeSortType() {\n    switch (sortType) {\n      case 'max-amount': return setSortType('return-date');\n      case 'return-date': return setSortType('max-amount');\n    }\n  }\n\n  console.log('onCHange');\n\n  return (\n    <div className={debtContainer()}>\n      <span className={debtContainer('header')}>\n        Займы по <button type=\"button\" onClick={() => changeSortType()}>\n        {sortType === 'max-amount' && 'большей сумме ₽'}\n        {sortType === 'return-date' && 'дате возврата'}\n      </button>\n      </span>\n      <div className={debtContainer('content')}>\n        {sortType === 'max-amount' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}/borrowed`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => Number(b.summary) - Number(a.summary)))\n              }}\n            </FirebaseDatabaseNode>\n            <FirebaseDatabaseNode path={`${userId}/lent`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => Number(b.summary) - Number(a.summary)))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n        {sortType === 'return-date' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}/borrowed`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => Number(b.summary) - Number(a.summary)))\n              }}\n            </FirebaseDatabaseNode>\n            <FirebaseDatabaseNode path={`${userId}/lent`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => Number(b.summary) - Number(a.summary)))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(DebtContainer);","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport {ContentFix, Dashboard, AddButton, DebtContainer} from '../../components';\nimport IPanelProps from \"../../types/panelProps\";\n\n/**\n * The app panel.\n *\n * @param props\n * @constructor\n */\nexport default function AppPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Все займы</PanelHeader>\n      <AddButton onModalShow={props.onShowModal} />\n      <ContentFix>\n        <Dashboard />\n        <DebtContainer />\n      </ContentFix>\n    </Panel>\n  );\n}","import React from 'react';\nimport { AppPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport IModal from \"../../types/modal\";\nimport {connect} from \"react-redux\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {IFriendsState} from \"../../store/reducers/friends/types\";\nimport {FirebaseDatabaseMutation} from \"@react-firebase/database\";\nimport { Icon24Cancel, Icon24Add } from '@vkontakte/icons';\nimport {\n  View,\n  ModalRoot,\n  ModalPage,\n  ModalPageHeader,\n  PanelHeaderButton,\n  Group,\n  FormLayout,\n  FormItem,\n  Radio,\n  Input,\n  Select,\n  CustomSelectOption,\n  Avatar,\n  DatePicker\n} from '@vkontakte/vkui';\nimport moment, { Moment } from 'moment';\n\n/**\n * The app view.\n *\n * @constructor\n */\nfunction AppView(props: ViewProps & PanelProps & { friends: IFriendsState }): React.ReactElement {\n  const [activeModal, setActiveModal] = React.useState<IModal | null>(null);\n  const [formState, setFormState] = React.useState<{\n    type: string | null;\n    summary: string | null;\n    contactId: string | null;\n    returnDate: Moment | null;\n  }>({\n    type: 'lent',\n    summary: null,\n    contactId: null,\n    returnDate: null\n  });\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  /**\n   * The function show modal.\n   * @param modalName\n   */\n  function onShowModal(modalName: string): void {\n    return setActiveModal(modalName);\n  }\n\n  console.log(formState);\n\n  /**\n   * The function cancel modal.\n   */\n  function onCancelModal(): void {\n    return setActiveModal(null);\n  }\n\n  /**\n   * The function create friends options.\n   * @param friends\n   */\n  function createFriendsOptions(friends: IFriendsState) {\n    const result: { value: number; label: string; avatar: string; }[] = [];\n\n    friends.forEach((friend) => {\n      result.push({\n        value: friend.id,\n        label: `${friend.first_name} ${friend.last_name}`,\n        avatar: friend.photo_100\n      });\n    });\n\n    return result;\n  }\n\n  const modal = (\n    <ModalRoot activeModal={activeModal} onClose={onCancelModal}>\n      <ModalPage id=\"add-debt\" header={\n        <ModalPageHeader\n          left={\n            <PanelHeaderButton onClick={() => setActiveModal(null)}>\n              <Icon24Cancel />\n            </PanelHeaderButton>\n          }\n          right={\n            formState.type !== null &&\n            formState.summary !== null &&\n            formState.contactId !== null &&\n            <FirebaseDatabaseMutation path={`${userId}/${formState.type}`} type=\"push\">\n              {({ runMutation }) => (\n                <PanelHeaderButton onClick={async () => {\n                  await runMutation({\n                    summary: formState.summary,\n                    contactId: formState.contactId,\n                    returnDate: formState.returnDate,\n                    createdAt: moment()\n                  });\n\n                  onCancelModal();\n                }}>\n                  <Icon24Add />\n                </PanelHeaderButton>\n              )}\n            </FirebaseDatabaseMutation>\n          }\n        >Добавить долг</ModalPageHeader>\n      }>\n        <Group>\n          <FormLayout>\n            <FormItem>\n              <Radio\n                name=\"type\"\n                value=\"lent\"\n                defaultChecked={formState.type === 'lent' ? true : undefined}\n                onChange={(e) => {\n                  setFormState({\n                    ...formState,\n                    type: e.target.value\n                  });\n                }}\n              >Дал в долг</Radio>\n            </FormItem>\n            <FormItem>\n              <Radio\n                name=\"type\"\n                value=\"borrowed\"\n                defaultChecked={formState.type === 'borrowed' ? true : undefined}\n                onChange={(e) => {\n                  setFormState({\n                    ...formState,\n                    type: e.target.value\n                  });\n                }}\n              >Взял в долг</Radio>\n            </FormItem>\n            <FormItem top=\"Сумма\">\n              <Input\n                defaultValue={formState.summary !== null ? formState.summary : undefined}\n                placeholder=\"Введите сумму\"\n                onBlur={(e) => {\n                  setFormState({\n                    ...formState,\n                    summary: e.target.value\n                  });\n                }}\n              />\n            </FormItem>\n          </FormLayout>\n          <FormItem top=\"Контакт\">\n            <Select\n              placeholder=\"Выберите контакт\"\n              options={createFriendsOptions(props.friends)}\n              defaultValue={formState.contactId !== null ? formState.contactId : undefined}\n              onChange={(e) => {\n                setFormState({\n                  ...formState,\n                  contactId: e.target.value\n                });\n              }}\n              renderOption={({ option, ...restProps }) => (\n                <CustomSelectOption {...restProps} before={<Avatar size={24} src={option.avatar} />} />\n              )}\n            />\n          </FormItem>\n          <FormItem top=\"Дата\">\n            <DatePicker\n              min={{day: 1, month: 1, year: 1901}}\n              max={{day: 1, month: 1, year: 2006}}\n              onDateChange={(date) => {\n                setFormState({\n                  ...formState,\n                  returnDate: moment(`${date.day}-${date.month}-${date.year}`)\n                });\n              }}\n              dayPlaceholder=\"ДД\"\n              monthPlaceholder=\"ММ\"\n              yearPlaceholder=\"ГГ\"\n            />\n          </FormItem>\n        </Group>\n      </ModalPage>\n    </ModalRoot>\n  );\n\n  return (\n    <View id={props.id} modal={modal} activePanel={props.activePanel}>\n      <AppPanel id={props.id} onShowModal={onShowModal} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(AppView);","/**\n * The tab routes with names.\n */\nenum TabRoute {\n  'Catalog' = 'catalog',\n  'App' = 'app'\n}\n\nexport default TabRoute;","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport { CatalogPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\n\n/**\n * The catalog view.\n *\n * @constructor\n */\nexport default function CatalogView(props: ViewProps & PanelProps): React.ReactElement {\n  return (\n    <View id={props.id} activePanel={props.activePanel}>\n      <CatalogPanel id={props.id} />\n    </View>\n  );\n}","import React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppRoot, Epic, Tabbar, TabbarItem, View } from '@vkontakte/vkui';\nimport { Icon28BookOutline, Icon28ServicesOutline } from '@vkontakte/icons';\nimport { fetchAccessToken } from './store/actions/user';\nimport { CatalogView, AppView } from './views';\nimport { IRouterProps, IStory, TabRoute } from './types';\n\n/**\n * The app router.\n *\n * @constructor\n */\nfunction Router(props: IRouterProps): React.ReactElement {\n  const [activeStory, setActiveStory] = React.useState<IStory>(TabRoute.App);\n\n  React.useEffect(() => {\n    props.fetchAccessToken();\n  }, [props]);\n\n  function onStoryChange(e: any): void {\n    return setActiveStory(e.currentTarget.dataset.story);\n  }\n\n  return (\n    <AppRoot>\n      <Epic activeStory={activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.Catalog}\n            data-story={TabRoute.Catalog}\n          ><Icon28BookOutline /></TabbarItem>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.App}\n            data-story={TabRoute.App}\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n        <CatalogView id={TabRoute.Catalog} activePanel={TabRoute.Catalog} />\n        <AppView id={TabRoute.App} activePanel={TabRoute.App} />\n      </Epic>\n    </AppRoot>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAccessToken: bindActionCreators(fetchAccessToken, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(Router);","import React from 'react';\nimport firebase from 'firebase';\nimport config from './firebase/config';\nimport { FirebaseDatabaseProvider } from '@react-firebase/database';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Router from './router';\n\n/**\n * The root app component.\n *\n * @constructor\n */\nexport default function App(): React.ReactElement {\n  return (\n    <FirebaseDatabaseProvider firebase={firebase} {...config}>\n      <Provider store={store}>\n        <Router />\n      </Provider>\n    </FirebaseDatabaseProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}