{"version":3,"sources":["store/constants/user.ts","store/reducers/user/index.ts","store/reducers/index.ts","store/sagas/worker/fetchAccessToken.ts","store/sagas/watcher/fetchAccessToken.ts","store/sagas/watcher/index.ts","store/index.ts","store/actions/user/index.ts","panels/Catalog/Catalog.tsx","components/Dashboard/modules/Card/Card.tsx","components/Dashboard/Dashboard.tsx","components/Contacts/Contacts.tsx","types/tabRoute.ts","panels/App/App.tsx","router.tsx","app.tsx","index.tsx"],"names":["SET_USER","FETCH_ACCESS_TOKEN","initialState","access_token","getUserState","state","user","combineReducers","action","type","constants","payload","fetchAccessTokenWorker","bridge","send","catch","alert","response","put","fetchAccessTokenWatcher","takeLatest","watcher","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","logger","createBrowserHistory","run","fetchAccessToken","CatalogPanel","props","id","dashboardCard","block","DashboardCard","className","subtitle","title","Dashboard","header","mode","size","TabRoute","connect","React","useEffect","method","params","order","v","then","console","log","error","description","before","AppPanel","dispatch","bindActionCreators","useState","App","activeStory","setActiveStory","onStoryChange","e","currentTarget","dataset","story","tabbar","onClick","selected","Catalog","data-story","activePanel","ReactDOM","render","document","getElementById"],"mappings":"oPAAaA,EAAW,WACXC,EAAqB,qBCI5BC,EAA2B,CAC/BC,aAAc,IAwBT,IAAMC,EAAe,SAACC,GAAD,OAAmBA,EAAMC,MCnBtCC,4BAAwB,CACrCD,KDGK,WAAgE,IAA3CD,EAA0C,uDAAlCH,EAAcM,EAAoB,uCACpE,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAOF,EAAOG,QAAQL,KAGxB,QAAS,OAAOD,M,qDEhBHO,GAAV,SAAUA,IAAV,uEACY,OADZ,SACkBC,IAAOC,KAAK,uBAAwB,CACzD,OAAU,QACV,MAAS,YACRC,OAAM,WACPC,MAAM,uXALH,OAQL,OAPMC,EADD,gBAQCC,YAAoB,CACxBT,KAAMT,EACNW,QAAS,CACPL,KAAM,CACJH,aAAcc,EAASd,iBAZxB,uC,eCDUgB,GAAV,SAAUA,IAAV,iEACL,OADK,SACCC,YAAWnB,EAAoBW,GADhC,uC,eCDkBS,GAAV,SAAUA,IAAV,iEACb,OADa,SACPC,YAAI,CACRH,MAFW,uC,YCKTI,EAAiBC,cACjBC,EAAQC,sBAAYC,EAASC,8BAAoBC,0BAAgBC,IAAQP,KAC/DQ,cAEhBR,EAAeS,IAAIX,G,qCCMZ,SAASY,IACd,MAAO,CACLxB,KAAMC,GCVK,SAASwB,EAAaC,GACnC,OACE,cAAC,IAAD,CAAOC,GAAID,EAAMC,GAAjB,SACE,cAAC,IAAD,2D,YCJAC,G,OAAgBC,gBAAM,mBAQb,SAASC,EAAcJ,GACpC,OACE,cAAC,IAAD,UACE,sBAAKK,UAAWH,IAAhB,UACE,sBAAMG,UAAWH,EAAc,YAA/B,SAA6CF,EAAMM,WACnD,wBAAQD,UAAWH,EAAc,SAAjC,SAA4CF,EAAMO,aCb3C,SAASC,IACtB,OACE,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,UAAb,6FAAgDA,KAAK,QAApE,SACE,cAAC,IAAD,CAAYC,KAAK,IAAjB,SACE,cAACP,EAAD,CACEE,SAAS,qDACTC,MAAM,uBCqBhB,ICjCKK,EDqCUC,eAJS,SAAC3C,GAAD,MAAoB,CAC1CF,aAAcC,EAAaC,GAAOF,gBAGrB6C,EA3Bf,SAAkBb,GAYhB,OAXAc,IAAMC,WAAU,WACdrC,IAAOC,KAAK,wBAAyB,CACnCqC,OAAQ,cACRC,OAAQ,CACNC,MAAO,QACPC,EAAG,OACHnD,aAAcgC,EAAMhC,gBAErBoD,MAAK,SAACtC,GAAD,OAAcuC,QAAQC,IAAI,MAAOxC,MAAWF,OAAM,SAAC2C,GAAD,OAAWF,QAAQC,IAAI,MAAOC,QACvF,CAACvB,IAGF,cAAC,IAAD,CAAOS,OAAQ,cAAC,IAAD,CAAQC,KAAK,UAAb,8DAA0CA,KAAK,QAA9D,SACE,cAAC,IAAD,CACEc,YAAY,oEACZC,OACE,cAAC,IAAD,CAAQd,KAAM,KAHlB,kGEhBS,SAASe,EAAS1B,GAC/B,OACE,eAAC,IAAD,CAAOC,GAAID,EAAMC,GAAjB,UACE,cAAC,IAAD,6CACA,cAACO,EAAD,IACA,cAAC,EAAD,Q,SDbDI,K,kBAAAA,E,WAAAA,M,KAKUA,QE4Cf,IAIeC,cAAQ,MAJI,SAACc,GAAD,MAAyB,CAClD7B,iBAAkB8B,6BAAmB9B,EAAkB6B,MAG1Cd,EA1Cf,SAAgBb,GAA0C,IAAD,EACjBc,IAAMe,SAAiBjB,EAASkB,KADf,mBAChDC,EADgD,KACnCC,EADmC,KAOvD,SAASC,EAAcC,GACrB,OAAOF,EAAeE,EAAEC,cAAcC,QAAQC,OAGhD,OARAvB,IAAMC,WAAU,WACdf,EAAMF,qBACL,CAACE,IAOF,cAAC,IAAD,UACE,eAAC,IAAD,CAAM+B,YAAaA,EAAaO,OAC9B,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,QAASN,EACTO,SAAUT,IAAgBnB,EAAS6B,QACnCC,aAAY9B,EAAS6B,QAHvB,SAIC,cAAC,IAAD,MACD,cAAC,IAAD,CACEF,QAASN,EACTO,SAAUT,IAAgBnB,EAASkB,IACnCY,aAAY9B,EAASkB,IAHvB,SAIC,cAAC,IAAD,SAXL,UAcE,cAAC,IAAD,CAAM7B,GAAIW,EAAS6B,QAASE,YAAa/B,EAAS6B,QAAlD,SACE,cAAC1C,EAAD,CAAcE,GAAIW,EAAS6B,YAE7B,cAAC,IAAD,CAAMxC,GAAIW,EAASkB,IAAKa,YAAa/B,EAASkB,IAA9C,SACE,cAACJ,EAAD,CAAUzB,GAAIW,EAASkB,gBCnClB,SAASA,IACtB,OACE,cAAC,IAAD,CAAUxC,MAAOA,EAAjB,SACE,cAAC,EAAD,M,OCRNsD,IAASC,OAAO,cAACf,EAAD,IAASgB,SAASC,eAAe,W","file":"static/js/main.227edcf8.chunk.js","sourcesContent":["export const SET_USER = 'SET_USER';\nexport const FETCH_ACCESS_TOKEN = 'FETCH_ACCESS_TOKEN';","import * as constants from '../../constants/user';\nimport { UserAction } from '../../actions/user/types';\nimport { IUserState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IUserState = {\n  access_token: ''\n};\n\n/**\n * The user reducer.\n *\n * @param state\n * @param action\n */\nexport function userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case constants.SET_USER: {\n      return action.payload.user;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return user state.\n *\n * @param state\n */\nexport const getUserState = (state: IState) => state.user;","import { combineReducers } from 'redux';\nimport { IState } from '../types/state';\n\n/**\n * Reducer's.\n */\nimport { userReducer } from './user';\n\n/**\n * The root reducer.\n */\nexport default combineReducers<IState>({\n  user: userReducer\n})","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetUserAction } from '../../actions/user/types';\nimport { SET_USER } from '../../constants/user';\n\nexport function* fetchAccessTokenWorker() {\n  const response = yield bridge.send('VKWebAppGetAuthToken', {\n    'app_id': 7712603,\n    'scope': 'friends'\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetUserAction>({\n    type: SET_USER,\n    payload: {\n      user: {\n        access_token: response.access_token\n      }\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { FETCH_ACCESS_TOKEN } from '../../constants/user';\nimport { fetchAccessTokenWorker } from '../worker/fetchAccessToken';\n\nexport function* fetchAccessTokenWatcher() {\n  yield takeLatest(FETCH_ACCESS_TOKEN, fetchAccessTokenWorker);\n}","import { all } from 'redux-saga/effects';\nimport { fetchAccessTokenWatcher } from './fetchAccessToken';\n\nexport default function* watcher() {\n  yield all([\n    fetchAccessTokenWatcher()\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport watcher from './sagas/watcher';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\nconst history = createBrowserHistory();\n\nsagaMiddleware.run(watcher);\n\nexport { store, history };","import * as constants from '../../constants/user';\nimport { ISetUserAction, UserAction } from './types';\n\n/**\n * The set user action.\n *\n * @param payload\n */\nexport function setUser(payload: ISetUserAction['payload']): UserAction {\n  return {\n    type: constants.SET_USER,\n    payload\n  };\n}\n\n/**\n * The fetch access token action.\n */\nexport function fetchAccessToken(): UserAction {\n  return {\n    type: constants.FETCH_ACCESS_TOKEN,\n  };\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport { PanelProps } from '@vkontakte/vkui/dist/components/Panel/Panel';\n\n/**\n * The catalog panel.\n *\n * @param props\n * @constructor\n */\nexport default function CatalogPanel(props: PanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Каталог</PanelHeader>\n    </Panel>\n  );\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { Card as CardWrapper } from '@vkontakte/vkui';\nimport { IDashboardCardProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst dashboardCard = block('dashboard-card');\n\n/**\n * The dashboard card module.\n *\n * @param props\n * @constructor\n */\nexport default function DashboardCard(props: IDashboardCardProps): React.ReactElement {\n  return (\n    <CardWrapper>\n      <div className={dashboardCard()}>\n        <span className={dashboardCard('subtitle')}>{props.subtitle}</span>\n        <strong className={dashboardCard('title')}>{props.title}</strong>\n      </div>\n    </CardWrapper>\n  );\n}","import React from 'react';\nimport { CardScroll, Group, Header } from '@vkontakte/vkui';\nimport { DashboardCard } from './modules';\n\n/**\n * The dashboard component.\n *\n * @constructor\n */\nexport default function Dashboard(): React.ReactElement {\n  return (\n    <Group header={<Header mode=\"primary\">Активные долги</Header>} mode=\"plain\">\n      <CardScroll size=\"m\">\n        <DashboardCard\n          subtitle=\"Дал в долг\"\n          title=\"125 000 ₽\"\n        />\n      </CardScroll>\n    </Group>\n  )\n}","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { connect } from 'react-redux';\nimport { Avatar, Group, Header, SimpleCell } from '@vkontakte/vkui';\nimport { IState } from \"../../store/types/state\";\nimport { getUserState } from \"../../store/reducers/user\";\nimport { IContactsProps } from './types';\n\n/**\n * The contacts component.\n *\n * @constructor\n */\nfunction Contacts(props: IContactsProps): React.ReactElement {\n  React.useEffect(() => {\n    bridge.send('VKWebAppCallAPIMethod', {\n      method: 'friends.get',\n      params: {\n        order: 'hints',\n        v: '5.21',\n        access_token: props.access_token\n      }\n    }).then((response) => console.log('111', response)).catch((error) => console.log('111', error));\n  }, [props]);\n\n  return (\n    <Group header={<Header mode=\"primary\">Контакты</Header>} mode=\"plain\">\n      <SimpleCell\n        description=\"Дал в долг 125 000 ₽\"\n        before={\n          <Avatar size={48} />\n        }>Даниил Фетисов</SimpleCell>\n    </Group>\n  )\n}\n\nconst mapStateToProps = (state: IState) => ({\n  access_token: getUserState(state).access_token\n});\n\nexport default connect(mapStateToProps)(Contacts);","/**\n * The tab routes with names.\n */\nenum TabRoute {\n  'Catalog' = 'catalog',\n  'App' = 'app'\n}\n\nexport default TabRoute;","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport { PanelProps } from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport { Contacts, Dashboard } from '../../components';\n\n/**\n * The app panel.\n *\n * @param props\n * @constructor\n */\nexport default function AppPanel(props: PanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Долги</PanelHeader>\n      <Dashboard />\n      <Contacts />\n    </Panel>\n  );\n}","import React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppRoot, Epic, Tabbar, TabbarItem, View } from '@vkontakte/vkui';\nimport { Icon28BookOutline, Icon28ServicesOutline } from '@vkontakte/icons';\nimport { fetchAccessToken } from './store/actions/user';\nimport { CatalogPanel, AppPanel } from './panels';\nimport { IRouterProps, IStory, TabRoute } from './types';\n\n/**\n * The app router.\n *\n * @constructor\n */\nfunction Router(props: IRouterProps): React.ReactElement {\n  const [activeStory, setActiveStory] = React.useState<IStory>(TabRoute.App);\n\n  React.useEffect(() => {\n    props.fetchAccessToken();\n  }, [props]);\n\n  function onStoryChange(e: any): void {\n    return setActiveStory(e.currentTarget.dataset.story);\n  }\n\n  return (\n    <AppRoot>\n      <Epic activeStory={activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.Catalog}\n            data-story={TabRoute.Catalog}\n          ><Icon28BookOutline /></TabbarItem>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.App}\n            data-story={TabRoute.App}\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n        <View id={TabRoute.Catalog} activePanel={TabRoute.Catalog}>\n          <CatalogPanel id={TabRoute.Catalog} />\n        </View>\n        <View id={TabRoute.App} activePanel={TabRoute.App}>\n          <AppPanel id={TabRoute.App} />\n        </View>\n      </Epic>\n    </AppRoot>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAccessToken: bindActionCreators(fetchAccessToken, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(Router);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Router from './router';\n\n/**\n * The root app component.\n *\n * @constructor\n */\nexport default function App(): React.ReactElement {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}