{"version":3,"sources":["firebase/config.ts","store/constants/user.ts","store/reducers/user/index.ts","store/constants/friends.ts","store/reducers/friends/index.ts","store/reducers/index.ts","store/sagas/worker/fetchAccessToken.ts","store/sagas/watcher/fetchAccessToken.ts","store/sagas/worker/fetchFriends.ts","store/sagas/watcher/fetchFriends.ts","store/sagas/watcher/index.ts","store/index.ts","store/actions/user/index.ts","components/Dashboard/modules/Card/Card.tsx","components/Dashboard/Dashboard.tsx","components/Contacts/Contacts.tsx","components/ContentFix/ContentFix.tsx","components/AddButton/AddButton.tsx","components/DebtCard/DebtCard.tsx","utils/getUserName.ts","components/DebtContainer/DebtContainer.tsx","components/CatalogItem/CatalogItem.tsx","panels/Catalog/Catalog.tsx","panels/App/App.tsx","views/App/App.tsx","types/tabRoute.ts","views/Catalog/Catalog.tsx","router.tsx","app.tsx","index.tsx"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SET_USER","FETCH_ACCESS_TOKEN","initialState","access_token","SET_FRIENDS","getFriendsState","state","friends","combineReducers","user","action","type","constants","payload","fetchAccessTokenWorker","queryString","window","location","search","urlParams","URLSearchParams","get","bridge","send","Number","catch","alert","response","put","fetchAccessTokenWatcher","takeLatest","fetchFriendsWorker","method","params","order","fields","v","store","getState","data","items","fetchFriendsWatcher","watcher","all","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","logger","createBrowserHistory","run","fetchAccessToken","dashboardCard","block","DashboardCard","props","className","title","subtitle","children","Dashboard","userId","getTotal","values","summary","Object","forEach","item","mode","size","path","isLoading","value","connect","header","length","map","friend","before","src","photo_100","first_name","last_name","contactFix","ContentFix","addButton","AddButton","onClick","onModalShow","color","debtCard","DebtCard","userName","createdAt","returnDate","debtContainer","React","useState","sortType","setSortType","renderDebt","node","id","contactId","find","Fragment","console","log","changeSortType","sort","a","b","moment","diff","catalogItem","CatalogItem","href","avatarSrc","CatalogPanel","fixed","AppPanel","onShowModal","TabRoute","activeModal","setActiveModal","initialValues","onCancelModal","createFriendsOptions","result","push","label","avatar","pad","n","validate","errors","runMutation","day","month","year","format","then","modal","onClose","settlingHeight","left","onSubmit","setFieldValue","name","field","defaultChecked","top","meta","placeholder","error","weight","style","position","options","renderOption","option","restProps","onDateChange","date","isNaN","min","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","stretched","activePanel","modalName","CatalogView","dispatch","bindActionCreators","App","activeStory","setActiveStory","onStoryChange","e","currentTarget","dataset","story","useEffect","tabbar","selected","Catalog","data-story","firebase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec072925.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyCumX0HBTrTWuiyCOkwfSmI_ro5pGEGCzM\",\n  authDomain: \"finbox-mini-app.firebaseapp.com\",\n  databaseURL: \"https://finbox-mini-app-default-rtdb.firebaseio.com\",\n  projectId: \"finbox-mini-app\",\n  storageBucket: \"finbox-mini-app.appspot.com\",\n  messagingSenderId: \"261332152446\",\n  appId: \"1:261332152446:web:1b0638cbb10e860a86a82f\"\n};\n\nexport default config;","export const SET_USER = 'SET_USER';\nexport const FETCH_ACCESS_TOKEN = 'FETCH_ACCESS_TOKEN';","import * as constants from '../../constants/user';\nimport { UserAction } from '../../actions/user/types';\nimport { IUserState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IUserState = {\n  access_token: ''\n};\n\n/**\n * The user reducer.\n *\n * @param state\n * @param action\n */\nexport function userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case constants.SET_USER: {\n      return action.payload.user;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return user state.\n *\n * @param state\n */\nexport const getUserState = (state: IState) => state.user;","export const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';","import * as constants from '../../constants/friends';\nimport { FriendsAction } from '../../actions/friends/types';\nimport { IFriendsState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IFriendsState = [];\n\n/**\n * The friends reducer.\n *\n * @param state\n * @param action\n */\nexport function friendsReducer(state = initialState, action: FriendsAction) {\n  switch (action.type) {\n    case constants.SET_FRIENDS: {\n      return action.payload.friends;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return friends state.\n *\n * @param state\n */\nexport const getFriendsState = (state: IState) => state.friends;","import { combineReducers } from 'redux';\nimport { IState } from '../types/state';\n\n/**\n * Reducer's.\n */\nimport { userReducer } from './user';\nimport { friendsReducer } from \"./friends\";\n\n/**\n * The root reducer.\n */\nexport default combineReducers<IState>({\n  user: userReducer,\n  friends: friendsReducer\n})","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetUserAction } from '../../actions/user/types';\nimport { SET_USER } from '../../constants/user';\n\nexport function* fetchAccessTokenWorker() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const appId = urlParams.get('vk_app_id');\n\n  const response = yield bridge.send('VKWebAppGetAuthToken', {\n    'app_id': Number(appId),\n    'scope': 'friends'\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetUserAction>({\n    type: SET_USER,\n    payload: {\n      user: {\n        access_token: response.access_token\n      }\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { FETCH_ACCESS_TOKEN } from '../../constants/user';\nimport { fetchAccessTokenWorker } from '../worker/fetchAccessToken';\n\nexport function* fetchAccessTokenWatcher() {\n  yield takeLatest(FETCH_ACCESS_TOKEN, fetchAccessTokenWorker);\n}","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetFriendsAction } from '../../actions/friends/types';\nimport { SET_FRIENDS } from '../../constants/friends';\nimport { store } from \"../..\";\n\nexport function* fetchFriendsWorker() {\n  const data = yield bridge.send('VKWebAppCallAPIMethod', {\n    method: 'friends.get',\n    params: {\n      order: 'hints',\n      fields: 'nickname,photo_100',\n      v: '5.21',\n      access_token: store.getState().user.access_token\n    }\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetFriendsAction>({\n    type: SET_FRIENDS,\n    payload: {\n      friends: data.response.items\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { SET_USER } from '../../constants/user';\nimport { fetchFriendsWorker } from '../worker/fetchFriends';\n\nexport function* fetchFriendsWatcher() {\n  yield takeLatest(SET_USER, fetchFriendsWorker);\n}","import { all } from 'redux-saga/effects';\nimport { fetchAccessTokenWatcher } from './fetchAccessToken';\nimport { fetchFriendsWatcher } from './fetchFriends';\n\nexport default function* watcher() {\n  yield all([\n    fetchAccessTokenWatcher(),\n    fetchFriendsWatcher()\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport watcher from './sagas/watcher';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\nconst history = createBrowserHistory();\n\nsagaMiddleware.run(watcher);\n\nexport { store, history };","import * as constants from '../../constants/user';\nimport { ISetUserAction, UserAction } from './types';\n\n/**\n * The set user action.\n *\n * @param payload\n */\nexport function setUser(payload: ISetUserAction['payload']): UserAction {\n  return {\n    type: constants.SET_USER,\n    payload\n  };\n}\n\n/**\n * The fetch access token action.\n */\nexport function fetchAccessToken(): UserAction {\n  return {\n    type: constants.FETCH_ACCESS_TOKEN,\n  };\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { Card as CardWrapper } from '@vkontakte/vkui';\nimport { IDashboardCardProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst dashboardCard = block('dashboard-card');\n\n/**\n * The dashboard card module.\n *\n * @param props\n * @constructor\n */\nexport default function DashboardCard(props: IDashboardCardProps): React.ReactElement {\n  return (\n    <CardWrapper>\n      <div className={dashboardCard()}>\n        {props.title && <span className={dashboardCard('subtitle')}>{props.title}</span>}\n        {props.subtitle && <strong className={dashboardCard('title')}>{props.subtitle}</strong>}\n        {props.children && <div className={dashboardCard('children')}>{props.children}</div>}\n      </div>\n    </CardWrapper>\n  );\n}","import React from 'react';\nimport { CardScroll, Group, Spinner } from '@vkontakte/vkui';\nimport { DashboardCard } from './modules';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\n\n/**\n * The dashboard component.\n *\n * @constructor\n */\nexport default function Dashboard(): React.ReactElement {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  function getTotal(type: string, values: any) {\n    let summary = 0;\n\n    Object.values(values).forEach((item: any) => {\n      if (item.type === type) {\n        summary = Number(item.summary) + summary;\n      }\n    });\n\n    return summary;\n  }\n\n  return (\n    <Group mode=\"plain\">\n      <CardScroll size=\"m\">\n        <FirebaseDatabaseNode path={`${userId}`}>\n          {(data) => {\n            return data.isLoading ? (\n              <>\n                <DashboardCard\n                  title=\"Полученные займы\"\n                  subtitle={<Spinner size=\"small\" />}\n                />\n                <DashboardCard\n                  title=\"Выданные займы\"\n                  subtitle={<Spinner size=\"small\" />}\n                />\n              </>\n            ) : data.value ? (\n              <>\n                <DashboardCard\n                  title=\"Полученные займы\"\n                  subtitle={`${data.value && getTotal('borrowed', data.value)} ₽`}\n                />\n                <DashboardCard\n                  title=\"Выданные займы\"\n                  subtitle={`${data.value && getTotal('lent', data.value)} ₽`}\n                />\n              </>\n            ) : (\n              <>\n                <DashboardCard\n                  title=\"Полученные займы\"\n                  subtitle=\"0 ₽\"\n                />\n                <DashboardCard\n                  title=\"Выданные займы\"\n                  subtitle=\"0 ₽\"\n                />\n              </>\n            )\n          }}\n        </FirebaseDatabaseNode>\n      </CardScroll>\n    </Group>\n  )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, Group, Header, SimpleCell, Spinner } from '@vkontakte/vkui';\nimport { IState } from \"../../store/types/state\";\nimport { getFriendsState } from \"../../store/reducers/friends\";\nimport { IContactsProps } from './types';\n\n/**\n * The contacts component.\n *\n * @constructor\n */\nfunction Contacts(props: IContactsProps): React.ReactElement {\n  /**\n   * The function render friends.\n   * @param friends\n   */\n  function renderFriends(friends: IContactsProps['friends']) {\n    return friends.map((friend) => (\n      <SimpleCell before={<Avatar src={friend.photo_100} size={48} />}>\n        {friend.first_name} {friend.last_name}\n      </SimpleCell>\n    ))\n  }\n\n  return (\n    <Group header={<Header mode=\"primary\">Контакты</Header>} mode=\"plain\">\n      {props.friends.length > 0 ? renderFriends(props.friends) : <Spinner size=\"medium\" />}\n    </Group>\n  )\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(Contacts);","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IContentFixProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst contactFix = block('contact-fix');\n\n/**\n * The content fix component.\n *\n * @param props\n * @constructor\n */\nexport default function ContentFix(props: IContentFixProps): React.ReactElement {\n  return (\n    <div className={contactFix()}>\n      {props.children}\n    </div>\n  );\n}","import React from \"react\";\nimport { Icon24Add } from '@vkontakte/icons';\nimport { block } from 'bem-cn';\nimport { IAddButtonProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst addButton = block('add-button');\n\n/**\n * The add button component.\n *\n * @constructor\n */\nexport default function AddButton(props: IAddButtonProps): React.ReactElement {\n  return (\n    <button type=\"button\" className={addButton()} onClick={() => props.onModalShow && props.onModalShow('add-debt')}>\n      <Icon24Add color=\"#fff\" />\n    </button>\n  );\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IDebtCardProps } from './types';\nimport getUserName from \"../../utils/getUserName\";\nimport './styles.scss';\nimport {Avatar} from \"@vkontakte/vkui\";\n\n/**\n * The class generator.\n */\nconst debtCard = block('debt-card');\n\n/**\n * The debt card component.\n *\n * @param props\n * @constructor\n */\nexport default function DebtCard(props: IDebtCardProps): React.ReactElement {\n  const userName = getUserName(props.first_name, props.last_name);\n\n  return (\n    <div className={debtCard()}>\n      <Avatar src={props.photo_100} size={48} />\n      <div className={debtCard('content')}>\n        <span className={debtCard('username')}>\n          {userName}\n        </span>\n        <div className={debtCard('datestamp')}>\n          <span className={debtCard('date')}>{props.createdAt}</span>\n          {props.returnDate && (\n            <span className={debtCard('date', { 'return': true })}>{props.returnDate}</span>\n          )}\n        </div>\n      </div>\n      <span className={debtCard('price')}>\n        {props.summary} ₽\n      </span>\n    </div>\n  );\n}","import IFriend from \"../store/types/friend\";\n\n/**\n * The get user name util.\n *\n * @param first_name\n * @param last_name\n */\nexport default function getUserName(first_name: IFriend['first_name'], last_name: IFriend['last_name']): string {\n  return `${first_name} ${last_name}`;\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport './styles.scss';\nimport {DebtCard} from \"..\";\nimport { Spinner } from '@vkontakte/vkui';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {connect} from \"react-redux\";\nimport {IDebtContainerProps} from './types';\nimport IFriend from \"../../store/types/friend\";\nimport moment from 'moment';\n\n/**\n * The class generator.\n */\nconst debtContainer = block('debt-container');\n\n/**\n * The debt container component.\n *\n * @constructor\n */\nfunction DebtContainer(props: IDebtContainerProps): React.ReactElement {\n  const [sortType, setSortType] = React.useState('max-amount');\n\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  function getFriendById(id: IFriend['id']): IFriend | undefined {\n    return props.friends.find((friend) => friend.id === id);\n  }\n\n  function renderDebt(data: any) {\n    return data.map((node: any) => {\n      const friend = getFriendById(Number(node.contactId));\n      return friend && (\n        <DebtCard\n          first_name={friend.first_name}\n          last_name={friend.last_name}\n          photo_100={friend.photo_100}\n          summary={node.summary}\n          createdAt={node.createdAt}\n          returnDate={node.returnDate}\n        />\n      ) || <React.Fragment/>\n    });\n  }\n\n  function changeSortType() {\n    switch (sortType) {\n      case 'max-amount': return setSortType('return-date');\n      case 'return-date': return setSortType('max-amount');\n    }\n  }\n\n  console.log('onCHange');\n  console.log('onCHange123123');\n\n  return (\n    <div className={debtContainer()}>\n      <span className={debtContainer('header')}>\n        Займы по <button type=\"button\" onClick={() => changeSortType()}>\n        {sortType === 'max-amount' && 'большей сумме ₽'}\n        {sortType === 'return-date' && 'дате возврата'}\n      </button>\n      </span>\n      <div className={debtContainer('content')}>\n        {sortType === 'max-amount' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => {\n                  return Number(b.summary) - Number(a.summary);\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n        {sortType === 'return-date' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => {\n                  return moment(a.returnDate).diff(moment(b.returnDate))\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(DebtContainer);","import React from 'react';\nimport { block } from 'bem-cn';\nimport {Avatar} from \"@vkontakte/vkui\";\nimport './styles.scss';\n\nconst catalogItem = block('catalog-item');\n\nexport default function CatalogItem(props: {\n  href: string;\n  avatarSrc: string;\n  title: string;\n  value: string;\n}) {\n  return (\n    <a href={props.href} className={catalogItem()}>\n      <Avatar src={props.avatarSrc} size={48} />\n      <span className={catalogItem('title')}>{props.title}</span>\n      <span className={catalogItem('value')}>{props.value}</span>\n    </a>\n  );\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport IPanelProps from \"../../types/panelProps\";\nimport {CatalogItem, ContentFix} from \"../../components\";\n\n/**\n * The catalog panel.\n *\n * @param props\n * @constructor\n */\nexport default function CatalogPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader fixed={false}>Каталог</PanelHeader>\n      <ContentFix>\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n      </ContentFix>\n    </Panel>\n  );\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport {ContentFix, Dashboard, AddButton, DebtContainer} from '../../components';\nimport IPanelProps from \"../../types/panelProps\";\n\n/**\n * The app panel.\n *\n * @param props\n * @constructor\n */\nexport default function AppPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader fixed={false}>Все займы</PanelHeader>\n      <AddButton onModalShow={props.onShowModal} />\n      <ContentFix>\n        <Dashboard />\n        <DebtContainer />\n      </ContentFix>\n    </Panel>\n  );\n}","import React from 'react';\nimport {Formik, Form, Field, FieldProps, FormikProps, FormikErrors} from 'formik';\nimport { AppPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport IModal from \"../../types/modal\";\nimport {connect} from \"react-redux\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {IFriendsState} from \"../../store/reducers/friends/types\";\nimport {FirebaseDatabaseMutation} from \"@react-firebase/database\";\nimport { Icon24Cancel } from '@vkontakte/icons';\nimport {\n  Button,\n  View,\n  ModalRoot,\n  ModalPage,\n  ModalPageHeader,\n  PanelHeaderButton,\n  Group,\n  FormLayout,\n  FormItem,\n  Radio,\n  Input,\n  Select,\n  CustomSelectOption,\n  Avatar,\n  DatePicker, Text\n} from '@vkontakte/vkui';\nimport {RunMutation} from \"@react-firebase/database/dist/components/FirebaseDatabaseMutation\";\nimport moment from 'moment';\n\ninterface Values {\n  type: 'lent' | 'borrowed';\n  contactId: string | null;\n  summary: string | null;\n  returnDate: any;\n}\n\n/**\n * The app view.\n *\n * @constructor\n */\nfunction AppView(props: ViewProps & PanelProps & { friends: IFriendsState }): React.ReactElement {\n  const [activeModal, setActiveModal] = React.useState<IModal | null>(null);\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  const initialValues: Values = {\n    type: 'lent',\n    contactId: null,\n    summary: null,\n    returnDate: null\n  }\n\n  /**\n   * The function show modal.\n   * @param modalName\n   */\n  function onShowModal(modalName: string): void {\n    return setActiveModal(modalName);\n  }\n\n  /**\n   * The function cancel modal.\n   */\n  function onCancelModal(): void {\n    return setActiveModal(null);\n  }\n\n  /**\n   * The function create friends options.\n   * @param friends\n   */\n  function createFriendsOptions(friends: IFriendsState) {\n    const result: { value: number; label: string; avatar: string; }[] = [];\n\n    friends.forEach((friend) => {\n      result.push({\n        value: friend.id,\n        label: `${friend.first_name} ${friend.last_name}`,\n        avatar: friend.photo_100\n      });\n    });\n\n    return result;\n  }\n\n  function pad(n: any) {\n    return (n < 10) ? (\"0\" + n) : n;\n  }\n\n  function validate(values: Values) {\n    const errors: FormikErrors<Values> = {};\n\n    if (!values.summary) {\n      errors.summary = 'Введите число';\n    } else if (!values.contactId) {\n      errors.contactId = 'Выберите контакт';\n    }\n\n    return errors;\n  }\n\n  async function onSubmit(values: Values, runMutation: RunMutation) {\n    await runMutation({\n      type: values.type,\n      contactId: values.contactId,\n      summary: values.summary,\n      returnDate: values.returnDate === null ? null : `${pad(values.returnDate.day)}-${pad(values.returnDate.month)}-${values.returnDate.year}`,\n      createdAt: moment().format('DD-MM-YYYY')\n    }).then(() => {\n      onCancelModal();\n    });\n  }\n\n  const modal = (\n    <ModalRoot activeModal={activeModal} onClose={onCancelModal}>\n      <ModalPage settlingHeight={100} id=\"add-debt\" header={\n        <ModalPageHeader\n          left={\n            <PanelHeaderButton onClick={() => setActiveModal(null)}>\n              <Icon24Cancel />\n            </PanelHeaderButton>\n          }\n        >Добавить долг</ModalPageHeader>\n      }>\n        <FirebaseDatabaseMutation path={`${userId}`} type=\"push\">\n          {({ runMutation }) => {\n            return (\n              <Formik initialValues={initialValues} onSubmit={(values) => onSubmit(values, runMutation)} validate={validate}>\n                {({ setFieldValue }: FormikProps<Values>) => (\n                  <Form>\n                    <Group>\n                      <FormItem>\n                        <Field name=\"type\">\n                          {({ field }: FieldProps) => (\n                            <Radio\n                              {...field}\n                              name=\"type\"\n                              value=\"lent\"\n                              defaultChecked\n                            >Дал в долг</Radio>\n                          )}\n                        </Field>\n                      </FormItem>\n                      <FormItem>\n                        <Field name=\"type\">\n                          {({ field }: FieldProps) => (\n                            <Radio\n                              {...field}\n                              name=\"type\"\n                              value=\"borrowed\"\n                            >Взял в долг</Radio>\n                          )}\n                        </Field>\n                      </FormItem>\n                      <FormItem top=\"Сумма\">\n                        <Field name=\"summary\">\n                          {({ field, meta }: FieldProps) => (\n                            <div>\n                              <Input\n                                {...field}\n                                placeholder=\"Введите сумму\"\n                              />\n                              {meta.error && <Text weight=\"medium\" color=\"red\" style={{ position: 'absolute' }}>{meta.error}</Text>}\n                            </div>\n                          )}\n                        </Field>\n                      </FormItem>\n                      <FormItem top=\"Контакт\">\n                        <Field name=\"contactId\">\n                          {({ field, meta }: FieldProps) => (\n                            <div>\n                              <Select\n                                {...field}\n                                placeholder=\"Выберите контакт\"\n                                options={createFriendsOptions(props.friends)}\n                                renderOption={({ option, ...restProps }) => (\n                                  <CustomSelectOption {...restProps} before={<Avatar size={24} src={option.avatar} />} />\n                                )}\n                              />\n                              {meta.error && <Text weight=\"medium\" color=\"red\" style={{ position: 'absolute' }}>{meta.error}</Text>}\n                            </div>\n                          )}\n                        </Field>\n                      </FormItem>\n                      <FormItem top=\"Дата возрата\">\n                        <Field name=\"returnDate\">\n                          {({ field }: FieldProps) => (\n                            <DatePicker\n                              {...field}\n                              onDateChange={(date) => {\n                                if (!isNaN(date.day) && !isNaN(date.month) && !isNaN(date.year)) {\n                                  setFieldValue('returnDate', date);\n                                }\n                              }}\n                              min={{day: 1, month: 1, year: 2021}}\n                              max={{day: 1, month: 1, year: 9999}}\n                              dayPlaceholder=\"ДД\"\n                              monthPlaceholder=\"ММ\"\n                              yearPlaceholder=\"ГГ\"\n                            />\n                          )}\n                        </Field>\n                      </FormItem>\n                      <FormItem>\n                        <Button type=\"submit\" mode=\"primary\" stretched size=\"l\">\n                          Добавить\n                        </Button>\n                      </FormItem>\n                    </Group>\n                  </Form>\n                )}\n              </Formik>\n            )\n          }}\n        </FirebaseDatabaseMutation>\n      </ModalPage>\n    </ModalRoot>\n  );\n\n  return (\n    <View id={props.id} modal={modal} activePanel={props.activePanel}>\n      <AppPanel id={props.id} onShowModal={onShowModal} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(AppView);","/**\n * The tab routes with names.\n */\nenum TabRoute {\n  'Catalog' = 'catalog',\n  'App' = 'app'\n}\n\nexport default TabRoute;","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport { CatalogPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\n\n/**\n * The catalog view.\n *\n * @constructor\n */\nexport default function CatalogView(props: ViewProps & PanelProps): React.ReactElement {\n  return (\n    <View id={props.id} activePanel={props.activePanel}>\n      <CatalogPanel id={props.id} />\n    </View>\n  );\n}","import React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppRoot, Epic, Tabbar, TabbarItem, View } from '@vkontakte/vkui';\nimport { Icon28BookOutline, Icon28ServicesOutline } from '@vkontakte/icons';\nimport { fetchAccessToken } from './store/actions/user';\nimport { CatalogView, AppView } from './views';\nimport { IRouterProps, IStory, TabRoute } from './types';\n\n/**\n * The app router.\n *\n * @constructor\n */\nfunction Router(props: IRouterProps): React.ReactElement {\n  const [activeStory, setActiveStory] = React.useState<IStory>(TabRoute.App);\n\n  React.useEffect(() => {\n    props.fetchAccessToken();\n  }, [props]);\n\n  function onStoryChange(e: any): void {\n    return setActiveStory(e.currentTarget.dataset.story);\n  }\n\n  return (\n    <AppRoot>\n      <Epic activeStory={activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.Catalog}\n            data-story={TabRoute.Catalog}\n          ><Icon28BookOutline /></TabbarItem>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.App}\n            data-story={TabRoute.App}\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n        <CatalogView id={TabRoute.Catalog} activePanel={TabRoute.Catalog} />\n        <AppView id={TabRoute.App} activePanel={TabRoute.App} />\n      </Epic>\n    </AppRoot>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAccessToken: bindActionCreators(fetchAccessToken, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(Router);","import React from 'react';\nimport firebase from 'firebase';\nimport config from './firebase/config';\nimport { FirebaseDatabaseProvider } from '@react-firebase/database';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Router from './router';\n\n/**\n * The root app component.\n *\n * @constructor\n */\nexport default function App(): React.ReactElement {\n  return (\n    <FirebaseDatabaseProvider firebase={firebase} {...config}>\n      <Provider store={store}>\n        <Router />\n      </Provider>\n    </FirebaseDatabaseProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}