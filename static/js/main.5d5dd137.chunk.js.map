{"version":3,"sources":["firebase/config.ts","store/constants/user.ts","store/reducers/user/index.ts","store/constants/friends.ts","store/reducers/friends/index.ts","store/reducers/index.ts","store/sagas/worker/fetchAccessToken.ts","store/sagas/watcher/fetchAccessToken.ts","store/sagas/worker/fetchFriends.ts","store/sagas/watcher/fetchFriends.ts","store/sagas/watcher/index.ts","store/index.ts","store/actions/user/index.ts","components/Dashboard/modules/Card/Card.tsx","components/Contacts/Contacts.tsx","views/App/types.ts","components/ContentFix/ContentFix.tsx","components/AddButton/AddButton.tsx","utils/getUserName.ts","components/DebtCard/DebtCard.tsx","components/DebtContainer/DebtContainer.tsx","components/CatalogItem/CatalogItem.tsx","modals/AddDebt/types.ts","utils/getCurrentUserId.ts","components/DebtController/types.ts","components/DebtController/modules/Carousel/Carousel.tsx","components/DebtController/DebtController.tsx","panels/Catalog/Catalog.tsx","panels/App/App.tsx","modals/AddDebt/AddDebt.tsx","views/App/App.tsx","types/tabRoute.ts","views/Catalog/Catalog.tsx","router.tsx","app.tsx","index.tsx"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SET_USER","FETCH_ACCESS_TOKEN","initialState","access_token","SET_FRIENDS","id","first_name","last_name","photo_100","track_code","nickname","getFriendsState","state","friends","combineReducers","user","action","type","constants","payload","fetchAccessTokenWorker","queryString","window","location","search","urlParams","URLSearchParams","get","bridge","send","Number","catch","alert","response","put","fetchAccessTokenWatcher","takeLatest","fetchFriendsWorker","method","params","order","fields","v","store","getState","data","items","fetchFriendsWatcher","watcher","all","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","logger","createBrowserHistory","run","fetchAccessToken","dashboardCard","block","DashboardCard","props","className","title","subtitle","children","connect","header","mode","length","map","friend","before","src","size","AppModal","contactFix","ContentFix","addButton","AddButton","onClick","onModalShow","AddDebt","color","getUserName","debtCard","DebtCard","userName","moment","createdAt","format","expirationDate","sum","debtContainer","React","useState","sortType","setSortType","userId","renderDebt","node","contactId","find","Fragment","console","log","changeSortType","path","isLoading","value","Object","values","sort","a","b","summary","returnDate","diff","catalogItem","CatalogItem","href","target","rel","avatarSrc","DebtType","getCurrentUserId","SortType","DebtCarousel","instance","this","on","index","onChange","options","initialIndex","cellAlign","prevNextButtons","pageDots","getTotalValue","forEach","flickityRef","ref","borrowed","lent","Component","setIndex","ByMaximumSum","renderCard","friendId","ByExpirationDate","Date","unix","CatalogPanel","fixed","AppPanel","onShowModal","ui","initialValues","validate","errors","updateModalHeight","runMutation","year","month","day","then","onCancelModal","getFriendsOptions","label","push","left","dynamicContentHeight","onSubmit","setFieldValue","name","field","meta","top","bottom","touched","error","min","renderOption","option","restProps","event","max","onDateChange","date","stretched","TabRoute","activeModal","setActiveModal","modal","onClose","activePanel","modalName","CatalogView","dispatch","bindActionCreators","App","activeStory","setActiveStory","onStoryChange","e","currentTarget","dataset","story","useEffect","tabbar","selected","Catalog","data-story","firebase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d5dd137.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyCumX0HBTrTWuiyCOkwfSmI_ro5pGEGCzM\",\n  authDomain: \"finbox-mini-app.firebaseapp.com\",\n  databaseURL: \"https://finbox-mini-app-default-rtdb.firebaseio.com\",\n  projectId: \"finbox-mini-app\",\n  storageBucket: \"finbox-mini-app.appspot.com\",\n  messagingSenderId: \"261332152446\",\n  appId: \"1:261332152446:web:1b0638cbb10e860a86a82f\"\n};\n\nexport default config;","export const SET_USER = 'SET_USER';\nexport const FETCH_ACCESS_TOKEN = 'FETCH_ACCESS_TOKEN';","import * as constants from '../../constants/user';\nimport { UserAction } from '../../actions/user/types';\nimport { IUserState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IUserState = {\n  access_token: ''\n};\n\n/**\n * The user reducer.\n *\n * @param state\n * @param action\n */\nexport function userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case constants.SET_USER: {\n      return action.payload.user;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return user state.\n *\n * @param state\n */\nexport const getUserState = (state: IState) => state.user;","export const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';","import * as constants from '../../constants/friends';\nimport { FriendsAction } from '../../actions/friends/types';\nimport { IFriendsState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IFriendsState = [\n  {\n    id: 5234123,\n    first_name: 'Test',\n    last_name: 'Test',\n    photo_100: '...',\n    track_code: '...',\n    nickname: '...'\n  },\n  {\n    id: 876543,\n    first_name: 'Test 2',\n    last_name: 'Test 2',\n    photo_100: '...',\n    track_code: '...',\n    nickname: '...'\n  }\n];\n\n/**\n * The friends reducer.\n *\n * @param state\n * @param action\n */\nexport function friendsReducer(state = initialState, action: FriendsAction) {\n  switch (action.type) {\n    case constants.SET_FRIENDS: {\n      return action.payload.friends;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return friends state.\n *\n * @param state\n */\nexport const getFriendsState = (state: IState) => state.friends;","import { combineReducers } from 'redux';\nimport { IState } from '../types/state';\n\n/**\n * Reducer's.\n */\nimport { userReducer } from './user';\nimport { friendsReducer } from \"./friends\";\n\n/**\n * The root reducer.\n */\nexport default combineReducers<IState>({\n  user: userReducer,\n  friends: friendsReducer\n})","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetUserAction } from '../../actions/user/types';\nimport { SET_USER } from '../../constants/user';\n\nexport function* fetchAccessTokenWorker() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const appId = urlParams.get('vk_app_id');\n\n  const response = yield bridge.send('VKWebAppGetAuthToken', {\n    'app_id': Number(appId),\n    'scope': 'friends'\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetUserAction>({\n    type: SET_USER,\n    payload: {\n      user: {\n        access_token: response.access_token\n      }\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { FETCH_ACCESS_TOKEN } from '../../constants/user';\nimport { fetchAccessTokenWorker } from '../worker/fetchAccessToken';\n\nexport function* fetchAccessTokenWatcher() {\n  yield takeLatest(FETCH_ACCESS_TOKEN, fetchAccessTokenWorker);\n}","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetFriendsAction } from '../../actions/friends/types';\nimport { SET_FRIENDS } from '../../constants/friends';\nimport { store } from \"../..\";\n\nexport function* fetchFriendsWorker() {\n  const data = yield bridge.send('VKWebAppCallAPIMethod', {\n    method: 'friends.get',\n    params: {\n      order: 'hints',\n      fields: 'nickname,photo_100',\n      v: '5.21',\n      access_token: store.getState().user.access_token\n    }\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetFriendsAction>({\n    type: SET_FRIENDS,\n    payload: {\n      friends: data.response.items\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { SET_USER } from '../../constants/user';\nimport { fetchFriendsWorker } from '../worker/fetchFriends';\n\nexport function* fetchFriendsWatcher() {\n  yield takeLatest(SET_USER, fetchFriendsWorker);\n}","import { all } from 'redux-saga/effects';\nimport { fetchAccessTokenWatcher } from './fetchAccessToken';\nimport { fetchFriendsWatcher } from './fetchFriends';\n\nexport default function* watcher() {\n  yield all([\n    fetchAccessTokenWatcher(),\n    fetchFriendsWatcher()\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport watcher from './sagas/watcher';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\nconst history = createBrowserHistory();\n\nsagaMiddleware.run(watcher);\n\nexport { store, history };","import * as constants from '../../constants/user';\nimport { ISetUserAction, UserAction } from './types';\n\n/**\n * The set user action.\n *\n * @param payload\n */\nexport function setUser(payload: ISetUserAction['payload']): UserAction {\n  return {\n    type: constants.SET_USER,\n    payload\n  };\n}\n\n/**\n * The fetch access token action.\n */\nexport function fetchAccessToken(): UserAction {\n  return {\n    type: constants.FETCH_ACCESS_TOKEN,\n  };\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { Card } from '@vkontakte/vkui';\nimport { IDashboardCardProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst dashboardCard = block('dashboard-card');\n\n/**\n * The dashboard card module.\n *\n * @param props\n * @constructor\n */\nexport default function DashboardCard(props: IDashboardCardProps): React.ReactElement {\n  return (\n    <Card className={dashboardCard()}>\n      <div className={dashboardCard('container')}>\n        {props.title && <span className={dashboardCard('subtitle')}>{props.title}</span>}\n        {props.subtitle && <strong className={dashboardCard('title')}>{props.subtitle}</strong>}\n        {props.children && <div className={dashboardCard('children')}>{props.children}</div>}\n      </div>\n    </Card>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, Group, Header, SimpleCell, Spinner } from '@vkontakte/vkui';\nimport { IState } from \"../../store/types/state\";\nimport { getFriendsState } from \"../../store/reducers/friends\";\nimport { IContactsProps } from './types';\n\n/**\n * The contacts component.\n *\n * @constructor\n */\nfunction Contacts(props: IContactsProps): React.ReactElement {\n  /**\n   * The function render friends.\n   * @param friends\n   */\n  function renderFriends(friends: IContactsProps['friends']) {\n    return friends.map((friend) => (\n      <SimpleCell before={<Avatar src={friend.photo_100} size={48} />}>\n        {friend.first_name} {friend.last_name}\n      </SimpleCell>\n    ))\n  }\n\n  return (\n    <Group header={<Header mode=\"primary\">Контакты</Header>} mode=\"plain\">\n      {props.friends.length > 0 ? renderFriends(props.friends) : <Spinner size=\"medium\" />}\n    </Group>\n  )\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(Contacts);","/**\n * The app modals.\n */\nexport enum AppModal {\n  AddDebt = 'add-debt'\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IContentFixProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst contactFix = block('contact-fix');\n\n/**\n * The content fix component.\n *\n * @param props\n * @constructor\n */\nexport default function ContentFix(props: IContentFixProps): React.ReactElement {\n  return (\n    <div className={contactFix()}>\n      {props.children}\n    </div>\n  );\n}","import React from \"react\";\nimport { Icon24Add } from '@vkontakte/icons';\nimport { block } from 'bem-cn';\nimport { IAddButtonProps } from './types';\nimport { AppModal } from '../../views/App/types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst addButton = block('add-button');\n\n/**\n * The add button component.\n *\n * @constructor\n */\nexport default function AddButton(props: IAddButtonProps): React.ReactElement {\n  return (\n    <button type=\"button\" className={addButton()} onClick={() => props.onModalShow && props.onModalShow(AppModal.AddDebt)}>\n      <Icon24Add color=\"#fff\" />\n    </button>\n  );\n}","import IFriend from \"../store/types/friend\";\n\n/**\n * The get user name util.\n *\n * @param first_name\n * @param last_name\n */\nexport default function getUserName(first_name: IFriend['first_name'], last_name: IFriend['last_name']): string {\n  return `${first_name} ${last_name}`;\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { IDebtCardProps } from './types';\nimport getUserName from \"../../utils/getUserName\";\nimport './styles.scss';\nimport {Avatar} from \"@vkontakte/vkui\";\nimport moment from 'moment';\n\n/**\n * The class generator.\n */\nconst debtCard = block('debt-card');\n\n/**\n * The debt card component.\n *\n * @param props\n * @constructor\n */\nexport default function DebtCard(props: IDebtCardProps): React.ReactElement {\n  const userName = getUserName(props.first_name, props.last_name);\n\n  return (\n    <div className={debtCard()}>\n      <Avatar src={props.photo_100} size={48} />\n      <div className={debtCard('content')}>\n        <span className={debtCard('username')}>\n          {userName}\n        </span>\n        <div className={debtCard('datestamp')}>\n          <span className={debtCard('date')}>\n            {moment(props.createdAt).format('DD-MM-YYYY')}\n          </span>\n          {props.expirationDate && <span className={debtCard('date', { 'return': true })}>\n            {moment(props.expirationDate).format('DD-MM-YYYY')}\n          </span>}\n        </div>\n      </div>\n      <span className={debtCard('price')}>\n        {props.sum} ₽\n      </span>\n    </div>\n  );\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport './styles.scss';\nimport {DebtCard} from \"..\";\nimport { Spinner } from '@vkontakte/vkui';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {connect} from \"react-redux\";\nimport {IDebtContainerProps} from './types';\nimport IFriend from \"../../store/types/friend\";\nimport moment from 'moment';\n\n/**\n * The class generator.\n */\nconst debtContainer = block('debt-container');\n\n/**\n * The debt container component.\n *\n * @constructor\n */\nfunction DebtContainer(props: IDebtContainerProps): React.ReactElement {\n  const [sortType, setSortType] = React.useState('max-amount');\n\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  function getFriendById(id: IFriend['id']): IFriend | undefined {\n    return props.friends.find((friend) => friend.id === id);\n  }\n\n  function renderDebt(data: any) {\n    return data.map((node: any) => {\n      const friend = getFriendById(Number(node.contactId));\n      return friend && (\n        <DebtCard\n          first_name={friend.first_name}\n          last_name={friend.last_name}\n          photo_100={friend.photo_100}\n          sum={0}\n          createdAt=\"0000\"\n          expirationDate={null}\n        />\n      ) || <React.Fragment/>\n    });\n  }\n\n  function changeSortType() {\n    switch (sortType) {\n      case 'max-amount': return setSortType('return-date');\n      case 'return-date': return setSortType('max-amount');\n    }\n  }\n\n  console.log('onCHange');\n  console.log('onCHange123123');\n\n  return (\n    <div className={debtContainer()}>\n      <span className={debtContainer('header')}>\n        Займы по <button type=\"button\" onClick={() => changeSortType()}>\n        {sortType === 'max-amount' && 'большей сумме ₽'}\n        {sortType === 'return-date' && 'дате возврата'}\n      </button>\n      </span>\n      <div className={debtContainer('content')}>\n        {sortType === 'max-amount' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => {\n                  return Number(b.summary) - Number(a.summary);\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n        {sortType === 'return-date' && (\n          <>\n            <FirebaseDatabaseNode path={`${userId}`}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderDebt(Object.values(data.value).sort((a: any, b: any) => {\n                  return moment(a.returnDate).diff(moment(b.returnDate))\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(DebtContainer);","import React from 'react';\nimport { block } from 'bem-cn';\nimport {Avatar} from \"@vkontakte/vkui\";\nimport './styles.scss';\n\nconst catalogItem = block('catalog-item');\n\nexport default function CatalogItem(props: {\n  href: string;\n  avatarSrc: string;\n  title: string;\n  value: string;\n}) {\n  return (\n    <a href={props.href} target=\"_blank\" rel=\"noreferrer\" className={catalogItem()}>\n      <Avatar src={props.avatarSrc} size={48} />\n      <span className={catalogItem('title')}>{props.title}</span>\n      <span className={catalogItem('value')}>{props.value}</span>\n    </a>\n  );\n}","import { SelectOption } from \"@vkontakte/vkui/dist/components/CustomSelect/CustomSelect\";\nimport { DateFormat } from \"@vkontakte/vkui/dist/components/DatePicker/DatePicker\";\nimport { IFriendsState } from '../../store/reducers/friends/types';\nimport IFriend from '../../store/types/friend';\nimport IModalProps from '../../types/modalProps';\n\n/**\n * The debt types.\n */\nexport enum DebtType {\n  'borrowed' = 'borrowed',\n  'lent' = 'lent'\n}\n\n/**\n * The add debt form values.\n */\nexport interface IAddDebtValues {\n  type: DebtType | null;\n  sum: number | null;\n  friendId: IFriend['id'] | null;\n  expirationDate: DateFormat | null;\n}\n\n/**\n * The friend option.\n */\nexport type IFriendOption = SelectOption;\n\n/**\n * The add debt modal props interface.\n */\nexport default interface IAddDebtModalProps extends IModalProps {\n  friends: IFriendsState;\n}","/**\n * The function return current user id.\n */\nexport default function getCurrentUserId(): string | null {\n  const params = new URLSearchParams(window.location.search);\n  return params.get('vk_user_id');\n}","import {IFriendsState} from \"../../store/reducers/friends/types\";\n\nexport enum SortType {\n  ByMaximumSum,\n  ByExpirationDate\n}\n\nexport default interface IDebtControllerProps {\n  friends: IFriendsState;\n}","import React from 'react';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\nimport { FirebaseDatabaseNodeChildFunctionProps } from \"@react-firebase/database/dist/types\";\nimport Flickity, { FlickityOptions } from 'react-flickity-component';\nimport { Spinner } from '@vkontakte/vkui';\nimport { getCurrentUserId } from \"../../../../utils\";\nimport { DashboardCard } from '../../../Dashboard/modules';\nimport { DebtType } from \"../../../../modals/AddDebt/types\";\nimport IDebtCarousel from './types';\n\nexport default class DebtCarousel extends React.Component<IDebtCarousel> {\n  public instance: Flickity | undefined;\n\n  componentDidMount() {\n    this.instance?.on('change', (index: number) => {\n      this.props.onChange && this.props.onChange(index);\n    });\n  }\n\n  render() {\n    const options: FlickityOptions = {\n      initialIndex: this.props.initialIndex || 0,\n      cellAlign: 'left',\n      prevNextButtons: false,\n      pageDots: false\n    };\n\n    /**\n     * The function render total value.\n     * @param type\n     * @param data\n     */\n    function getTotalValue(type: DebtType, data: FirebaseDatabaseNodeChildFunctionProps) {\n      let sum = 0;\n\n      if (!data.isLoading && data.value !== null) {\n        Object.values(data.value).forEach((node: any) => {\n          if (node.type === type) {\n            sum = Number(node.sum) + sum;\n          }\n        });\n      }\n\n      return `${sum} ₽`;\n    }\n\n    return (\n      <Flickity flickityRef={(ref) => this.instance = ref} options={options}>\n        <div className=\"carousel-cell\">\n          <FirebaseDatabaseNode path={getCurrentUserId() || '/'}>\n            {(data) => (\n              <DashboardCard\n                title=\"Выданные займы\"\n                subtitle={data.isLoading ? <Spinner size=\"regular\" /> : getTotalValue(DebtType.borrowed, data)}\n              />\n            )}\n          </FirebaseDatabaseNode>\n        </div>\n        <div className=\"carousel-cell\">\n          <FirebaseDatabaseNode path={getCurrentUserId() || '/'}>\n            {(data) => (\n              <DashboardCard\n                title=\"Полученные займы\"\n                subtitle={data.isLoading ? <Spinner size=\"regular\" /> : getTotalValue(DebtType.lent, data)}\n              />\n            )}\n          </FirebaseDatabaseNode>\n        </div>\n      </Flickity>\n    );\n  }\n}","import React from 'react';\nimport {block} from \"bem-cn\";\nimport {FirebaseDatabaseNode} from \"@react-firebase/database\";\nimport {Spinner} from '@vkontakte/vkui';\nimport {DebtCarousel} from './modules';\nimport {getCurrentUserId} from \"../../utils\";\nimport IDebtControllerProps, {SortType} from './types';\nimport {DebtType} from \"../../modals/AddDebt/types\";\nimport {connect} from \"react-redux\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {DebtCard} from \"../index\";\nimport moment from 'moment';\n\nconst debtContainer = block('debt-container');\n\nfunction DebtController(props: IDebtControllerProps): React.ReactElement {\n  const [index, setIndex] = React.useState<number>(0);\n  const [sortType, setSortType] = React.useState<SortType>(SortType.ByMaximumSum);\n\n  /**\n   * The function change sort type.\n   */\n  function changeSortType(): void {\n    if (sortType === SortType.ByMaximumSum) {\n      return setSortType(SortType.ByExpirationDate);\n    } else {\n      return setSortType(SortType.ByMaximumSum);\n    }\n  }\n\n  /**\n   * The function render card.\n   * @param type\n   * @param data\n   */\n  function renderCard(type: DebtType, data: any) {\n    return data.map((node: any) => {\n      if (type === node.type) {\n        const friend = props.friends.find((friend) => friend.id === node.friendId);\n        return friend ? (\n          <DebtCard\n            first_name={friend.first_name}\n            last_name={friend.last_name}\n            photo_100={friend.photo_100}\n            sum={node.sum}\n            createdAt={node.createdAt}\n            expirationDate={node.expirationDate}\n          />\n        ) : <React.Fragment/>;\n      } else return <React.Fragment />;\n    });\n  }\n\n  return (\n    <div>\n      <DebtCarousel\n        onChange={(index) => setIndex(index)}\n      />\n      <div className={debtContainer()}>\n        <span className={debtContainer('header')}>\n          Займы по {' '}\n          <button type=\"button\" onClick={() => changeSortType()}>\n            {sortType === SortType.ByMaximumSum && 'большей сумме ₽'}\n            {sortType === SortType.ByExpirationDate && 'дате возврата'}\n          </button>\n        </span>\n        <div className={debtContainer('content')}>\n          {index === 0 && sortType === SortType.ByMaximumSum && (\n            <FirebaseDatabaseNode path={getCurrentUserId() || '/'}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"regular\" /> : data.value && renderCard(DebtType.borrowed, Object.values(data.value).sort((a: any, b: any) => {\n                  return Number(b.sum) - Number(a.sum);\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          )}\n          {index === 0 && sortType === SortType.ByExpirationDate && (\n            <FirebaseDatabaseNode path={getCurrentUserId() || '/'}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderCard(DebtType.borrowed, Object.values(data.value).sort((a: any, b: any) => {\n                  return moment(new Date(a.expirationDate)).unix() - moment(new Date(b.expirationDate)).unix()\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          )}\n          {index === 1 && sortType === SortType.ByMaximumSum && (\n            <FirebaseDatabaseNode path={getCurrentUserId() || '/'}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"regular\" /> : data.value && renderCard(DebtType.lent, Object.values(data.value).sort((a: any, b: any) => {\n                  return Number(b.sum) - Number(a.sum);\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          )}\n          {index === 1 && sortType === SortType.ByExpirationDate && (\n            <FirebaseDatabaseNode path={getCurrentUserId() || '/'}>\n              {(data) => {\n                return data.isLoading ? <Spinner size=\"medium\" /> : data.value && renderCard(DebtType.lent, Object.values(data.value).sort((a: any, b: any) => {\n                  return moment(new Date(a.expirationDate)).unix() - moment(new Date(b.expirationDate)).unix()\n                }))\n              }}\n            </FirebaseDatabaseNode>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(DebtController);","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport IPanelProps from \"../../types/panelProps\";\nimport {CatalogItem, ContentFix} from \"../../components\";\n\n/**\n * The catalog panel.\n *\n * @param props\n * @constructor\n */\nexport default function CatalogPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader fixed={false}>Каталог</PanelHeader>\n      <ContentFix>\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n        <CatalogItem href=\"https://www.kredito24.ru/\" avatarSrc=\"https://www.orelbanks.ru/bimage/kredito24-logo.jpg\" title=\"kredito24\" value=\"До 100 руб\" />\n      </ContentFix>\n    </Panel>\n  );\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport { ContentFix, AddButton, DebtController } from '../../components';\nimport IPanelProps from \"../../types/panelProps\";\n\n/**\n * The app panel.\n *\n * @param props\n * @constructor\n */\nexport default function AppPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader fixed={false}>Все займы</PanelHeader>\n      <AddButton onModalShow={props.onShowModal} />\n      <ContentFix>\n        <DebtController />\n      </ContentFix>\n    </Panel>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FirebaseDatabaseMutation } from '@react-firebase/database';\nimport moment from 'moment';\nimport * as formik from 'formik';\nimport * as ui from '@vkontakte/vkui';\nimport * as icons from \"@vkontakte/icons\";\nimport { getCurrentUserId, getUserName } from '../../utils';\nimport { getFriendsState } from '../../store/reducers/friends';\nimport { RunMutation } from '@react-firebase/database/dist/components/FirebaseDatabaseMutation';\nimport IAddDebtModalProps, { IAddDebtValues, IFriendOption, DebtType } from './types';\nimport { IState } from '../../store/types/state';\n\nfunction AddDebtModal(props: IAddDebtModalProps): React.ReactElement {\n  /**\n   * The initial form values.\n   */\n  const initialValues: IAddDebtValues = {\n    type: null,\n    sum: null,\n    friendId: null,\n    expirationDate: null\n  };\n\n  /**\n   * The function validate values before submit.\n   * @param values\n   */\n  function validate(values: IAddDebtValues): formik.FormikErrors<IAddDebtValues> {\n    const errors: formik.FormikErrors<IAddDebtValues> = {};\n    props.updateModalHeight && props.updateModalHeight();\n\n    if (!values.type) {\n      errors.type = 'Выберите тип долга';\n    } else if (!values.sum) {\n      errors.sum = 'Введите сумму';\n    } else if (!values.friendId || values.friendId === -1) {\n      errors.friendId = 'Выберите контакт из списка';\n    }\n\n    return errors;\n  }\n\n  /**\n   * The handle of form submit.\n   */\n  async function onSubmit(values: IAddDebtValues, runMutation: RunMutation) {\n    await runMutation({\n      ...values,\n      createdAt: moment().format('YYYY-MM-DD'),\n      expirationDate: values.expirationDate && moment(new Date(values.expirationDate.year, values.expirationDate.month - 1, values.expirationDate.day)).format('YYYY-MM-DD')\n    }).then(() => props.onCancelModal && props.onCancelModal());\n  }\n\n  /**\n   * The function return friends options.\n   */\n  function getFriendsOptions(): IFriendOption[] {\n    const options: IFriendOption[] = [\n      { value: -1, label: 'Не выбрано' }\n    ];\n\n    props.friends.forEach((friend) => {\n      options.push({\n        value: friend.id,\n        label: getUserName(friend.first_name, friend.last_name),\n        photo_100: friend.photo_100\n      });\n    });\n\n    return options;\n  }\n\n  return (\n    <ui.ModalPage id={props.id} header={(\n      <ui.ModalPageHeader left={\n        <ui.PanelHeaderButton onClick={() => props.onCancelModal && props.onCancelModal()}>\n          <icons.Icon24Cancel />\n        </ui.PanelHeaderButton>\n      }>Добавить долг</ui.ModalPageHeader>\n    )} dynamicContentHeight={props.dynamicContentHeight}>\n      <FirebaseDatabaseMutation path={getCurrentUserId() || '/'} type=\"push\">\n        {({ runMutation }) => (\n          <formik.Formik initialValues={initialValues} validate={validate} onSubmit={(values) => onSubmit(values, runMutation)}>\n            {({ setFieldValue }: formik.FormikProps<IAddDebtValues>) => (\n              <formik.Form>\n                <formik.Field name=\"type\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Тип долга*\" bottom={meta.touched && meta.error}>\n                      <ui.Radio {...field} value={DebtType.borrowed}>\n                        Дал в долг\n                      </ui.Radio>\n                      <ui.Radio {...field} value={DebtType.lent}>\n                        Взял в долг\n                      </ui.Radio>\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <formik.Field name=\"sum\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Сумма*\" bottom={meta.touched && meta.error}>\n                      <ui.Input {...field} type=\"number\" min={1} />\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <formik.Field name=\"friendId\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Выберите друга*\" bottom={meta.touched && meta.error}>\n                      <ui.Select\n                        {...field}\n                        options={getFriendsOptions()}\n                        renderOption={({ option, ...restProps }) => (\n                          <ui.CustomSelectOption\n                            {...restProps}\n                            before={option.photo_100 && (\n                              <ui.Avatar\n                                src={option.photo_100}\n                                size={24}\n                              />\n                            )}\n                          />\n                        )}\n                        onChange={(event) => {\n                          return setFieldValue(field.name, Number(event.target.value));\n                        }}\n                      />\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <formik.Field name=\"expirationDate\">\n                  {({ field, meta }: formik.FieldProps) => (\n                    <ui.FormItem top=\"Дата возврата\" bottom={meta.touched && meta.error}>\n                      <ui.DatePicker\n                        {...field}\n                        min={{\n                          day: Number(moment().format('D')),\n                          month: Number(moment().format('M')),\n                          year: Number(moment().format('YYYY'))\n                        }}\n                        max={{\n                          day: Number(moment().format('D')),\n                          month: Number(moment().format('M')),\n                          year: Number(moment().format('YYYY')) + 1000\n                        }}\n                        onDateChange={(date) => {\n                          return setFieldValue(field.name, date);\n                        }}\n                      />\n                    </ui.FormItem>\n                  )}\n                </formik.Field>\n                <ui.FormItem>\n                  <ui.Button type=\"submit\" mode=\"primary\" size=\"l\" before={<icons.Icon24Add />} stretched>\n                    Добавить\n                  </ui.Button>\n                </ui.FormItem>\n              </formik.Form>\n            )}\n          </formik.Formik>\n        )}\n      </FirebaseDatabaseMutation>\n    </ui.ModalPage>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(ui.withModalRootContext(AddDebtModal));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { View, ModalRoot } from '@vkontakte/vkui';\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport { getFriendsState } from \"../../store/reducers/friends\";\nimport { AppPanel } from \"../../panels\";\nimport { AddDebtModal } from '../../modals';\nimport { IState } from \"../../store/types/state\";\nimport { IFriendsState } from \"../../store/reducers/friends/types\";\nimport { AppModal } from './types';\nimport IModal from \"../../types/modal\";\n\n/**\n * The app view.\n *\n * @constructor\n */\nfunction AppView(props: ViewProps & PanelProps & { friends: IFriendsState }): React.ReactElement {\n  const [activeModal, setActiveModal] = React.useState<IModal | null>(null);\n\n  /**\n   * The function show modal.\n   * @param modalName\n   */\n  function onShowModal(modalName: string): void {\n    return setActiveModal(modalName);\n  }\n\n  /**\n   * The function cancel modal.\n   */\n  function onCancelModal(): void {\n    return setActiveModal(null);\n  }\n\n  const modal = (\n    <ModalRoot activeModal={activeModal} onClose={onCancelModal}>\n      <AddDebtModal id={AppModal.AddDebt} onCancelModal={onCancelModal} dynamicContentHeight />\n    </ModalRoot>\n  );\n\n  return (\n    <View id={props.id} modal={modal} activePanel={props.activePanel}>\n      <AppPanel id={props.id} onShowModal={onShowModal} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(AppView);","/**\n * The tab routes with names.\n */\nenum TabRoute {\n  'Catalog' = 'catalog',\n  'App' = 'app'\n}\n\nexport default TabRoute;","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport { CatalogPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\n\n/**\n * The catalog view.\n *\n * @constructor\n */\nexport default function CatalogView(props: ViewProps & PanelProps): React.ReactElement {\n  return (\n    <View id={props.id} activePanel={props.activePanel}>\n      <CatalogPanel id={props.id} />\n    </View>\n  );\n}","import React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppRoot, Epic, Tabbar, TabbarItem, View } from '@vkontakte/vkui';\nimport { Icon28BookOutline, Icon28ServicesOutline } from '@vkontakte/icons';\nimport { fetchAccessToken } from './store/actions/user';\nimport { CatalogView, AppView } from './views';\nimport { IRouterProps, IStory, TabRoute } from './types';\n\n/**\n * The app router.\n *\n * @constructor\n */\nfunction Router(props: IRouterProps): React.ReactElement {\n  const [activeStory, setActiveStory] = React.useState<IStory>(TabRoute.App);\n\n  React.useEffect(() => {\n    props.fetchAccessToken();\n  }, [props]);\n\n  function onStoryChange(e: any): void {\n    return setActiveStory(e.currentTarget.dataset.story);\n  }\n\n  return (\n    <AppRoot>\n      <Epic activeStory={activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.Catalog}\n            data-story={TabRoute.Catalog}\n          ><Icon28BookOutline /></TabbarItem>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.App}\n            data-story={TabRoute.App}\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n        <CatalogView id={TabRoute.Catalog} activePanel={TabRoute.Catalog} />\n        <AppView id={TabRoute.App} activePanel={TabRoute.App} />\n      </Epic>\n    </AppRoot>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAccessToken: bindActionCreators(fetchAccessToken, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(Router);","import React from 'react';\nimport firebase from 'firebase';\nimport config from './firebase/config';\nimport { FirebaseDatabaseProvider } from '@react-firebase/database';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Router from './router';\n\n/**\n * The root app component.\n *\n * @constructor\n */\nexport default function App(): React.ReactElement {\n  return (\n    <FirebaseDatabaseProvider firebase={firebase} {...config}>\n      <Provider store={store}>\n        <Router />\n      </Provider>\n    </FirebaseDatabaseProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}