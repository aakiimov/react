{"version":3,"sources":["store/constants/user.ts","store/reducers/user/index.ts","store/reducers/index.ts","store/sagas/worker/fetchAccessToken.ts","store/sagas/watcher/fetchAccessToken.ts","store/sagas/watcher/index.ts","store/index.ts","store/actions/user/index.ts","panels/Catalog/Catalog.tsx","types/tabRoute.ts","components/Dashboard/modules/Card/Card.tsx","components/Dashboard/Dashboard.tsx","components/Contacts/Contacts.tsx","panels/App/App.tsx","router.tsx","app.tsx","index.tsx"],"names":["SET_USER","FETCH_ACCESS_TOKEN","initialState","access_token","combineReducers","user","state","action","type","constants","payload","fetchAccessTokenWorker","bridge","send","response","console","log","fetchAccessTokenWatcher","takeLatest","watcher","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","logger","createBrowserHistory","run","fetchAccessToken","CatalogPanel","props","id","TabRoute","dashboardCard","block","DashboardCard","className","subtitle","title","Dashboard","header","mode","size","Contacts","then","data","catch","error","description","before","AppPanel","connect","dispatch","bindActionCreators","React","useState","App","activeStory","setActiveStory","onStoryChange","e","currentTarget","dataset","story","useEffect","tabbar","onClick","selected","Catalog","data-story","activePanel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0002219f.chunk.js","sourcesContent":["export const SET_USER = 'SET_USER';\nexport const FETCH_ACCESS_TOKEN = 'FETCH_ACCESS_TOKEN';","import * as constants from '../../constants/user';\nimport { UserAction } from '../../actions/user/types';\nimport { IUserState } from './types';\n\nconst initialState: IUserState = {\n  access_token: ''\n};\n\n/**\n * The user reducer.\n *\n * @param state\n * @param action\n */\nexport function userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case constants.SET_USER: {\n      return action.payload.user;\n    }\n\n    default: return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { IState } from '../types/state';\n\n/**\n * Reducer's.\n */\nimport { userReducer } from './user';\n\n/**\n * The root reducer.\n */\nexport default combineReducers<IState>({\n  user: userReducer\n})","import bridge from '@vkontakte/vk-bridge';\n\nexport function* fetchAccessTokenWorker() {\n  const response = yield bridge.send('VKWebAppGetAuthToken', {\n    'app_id': 9999,\n    'scope': 'friends'\n  });\n\n  console.log('We revive data!')\n  console.log(response);\n}","import { takeLatest } from 'redux-saga/effects';\nimport { FETCH_ACCESS_TOKEN } from '../../constants/user';\nimport { fetchAccessTokenWorker } from '../worker/fetchAccessToken';\n\nexport function* fetchAccessTokenWatcher() {\n  yield takeLatest(FETCH_ACCESS_TOKEN, fetchAccessTokenWorker);\n}","import { all } from 'redux-saga/effects';\nimport { fetchAccessTokenWatcher } from './fetchAccessToken';\n\nexport default function* watcher() {\n  yield all([\n    fetchAccessTokenWatcher()\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport watcher from './sagas/watcher';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\nconst history = createBrowserHistory();\n\nsagaMiddleware.run(watcher);\n\nexport { store, history };","import * as constants from '../../constants/user';\nimport { ISetUserAction, UserAction } from './types';\n\n/**\n * The set user action.\n *\n * @param payload\n */\nexport function setUser(payload: ISetUserAction['payload']): UserAction {\n  return {\n    type: constants.SET_USER,\n    payload\n  };\n}\n\n/**\n * The fetch access token action.\n */\nexport function fetchAccessToken(): UserAction {\n  return {\n    type: constants.FETCH_ACCESS_TOKEN,\n  };\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport { PanelProps } from '@vkontakte/vkui/dist/components/Panel/Panel';\n\n/**\n * The catalog panel.\n *\n * @param props\n * @constructor\n */\nexport default function CatalogPanel(props: PanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Каталог</PanelHeader>\n    </Panel>\n  );\n}","/**\n * The tab routes with names.\n */\nenum TabRoute {\n  'Catalog' = 'catalog',\n  'App' = 'app'\n}\n\nexport default TabRoute;","import React from 'react';\nimport { block } from 'bem-cn';\nimport { Card as CardWrapper } from '@vkontakte/vkui';\nimport { IDashboardCardProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst dashboardCard = block('dashboard-card');\n\n/**\n * The dashboard card module.\n *\n * @param props\n * @constructor\n */\nexport default function DashboardCard(props: IDashboardCardProps): React.ReactElement {\n  return (\n    <CardWrapper>\n      <div className={dashboardCard()}>\n        <span className={dashboardCard('subtitle')}>{props.subtitle}</span>\n        <strong className={dashboardCard('title')}>{props.title}</strong>\n      </div>\n    </CardWrapper>\n  );\n}","import React from 'react';\nimport { CardScroll, Group, Header } from '@vkontakte/vkui';\nimport { DashboardCard } from './modules';\n\n/**\n * The dashboard component.\n *\n * @constructor\n */\nexport default function Dashboard(): React.ReactElement {\n  return (\n    <Group header={<Header mode=\"primary\">Активные долги</Header>} mode=\"plain\">\n      <CardScroll size=\"m\">\n        <DashboardCard\n          subtitle=\"Дал в долг\"\n          title=\"125 000 ₽\"\n        />\n      </CardScroll>\n    </Group>\n  )\n}","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Avatar, Group, Header, SimpleCell } from '@vkontakte/vkui';\n\n/**\n * The contacts component.\n *\n * @constructor\n */\nexport default function Contacts(): React.ReactElement {\n  bridge\n    .send('VKWebAppGetAuthToken', {\n      'app_id': 7712603,\n      'scope': 'friends'\n    })\n    .then(data => {\n      console.log(data);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n\n  return (\n    <Group header={<Header mode=\"primary\">Контакты</Header>} mode=\"plain\">\n      <SimpleCell\n        description=\"Дал в долг 125 000 ₽\"\n        before={\n          <Avatar size={48} />\n        }>Даниил Фетисов</SimpleCell>\n    </Group>\n  )\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport { PanelProps } from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport { Contacts, Dashboard } from '../../components';\n\n/**\n * The app panel.\n *\n * @param props\n * @constructor\n */\nexport default function AppPanel(props: PanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Долги</PanelHeader>\n      <Dashboard />\n      <Contacts />\n    </Panel>\n  );\n}","import React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppRoot, Epic, Tabbar, TabbarItem, View } from '@vkontakte/vkui';\nimport { Icon28BookOutline, Icon28ServicesOutline } from '@vkontakte/icons';\nimport { fetchAccessToken } from './store/actions/user';\nimport { CatalogPanel, AppPanel } from './panels';\nimport { IRouterProps, IStory, TabRoute } from './types';\n\n/**\n * The app router.\n *\n * @constructor\n */\nfunction Router(props: IRouterProps): React.ReactElement {\n  const [activeStory, setActiveStory] = React.useState<IStory>(TabRoute.App);\n\n  React.useEffect(() => {\n    props.fetchAccessToken();\n  }, [props]);\n\n  function onStoryChange(e: any): void {\n    return setActiveStory(e.currentTarget.dataset.story);\n  }\n\n  return (\n    <AppRoot>\n      <Epic activeStory={activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.Catalog}\n            data-story={TabRoute.Catalog}\n          ><Icon28BookOutline /></TabbarItem>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.App}\n            data-story={TabRoute.App}\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n        <View id={TabRoute.Catalog} activePanel={TabRoute.Catalog}>\n          <CatalogPanel id={TabRoute.Catalog} />\n        </View>\n        <View id={TabRoute.App} activePanel={TabRoute.App}>\n          <AppPanel id={TabRoute.App} />\n        </View>\n      </Epic>\n    </AppRoot>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAccessToken: bindActionCreators(fetchAccessToken, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(Router);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Router from './router';\n\n/**\n * The root app component.\n *\n * @constructor\n */\nexport default function App(): React.ReactElement {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}