{"version":3,"sources":["firebase/config.ts","store/constants/user.ts","store/reducers/user/index.ts","store/constants/friends.ts","store/reducers/friends/index.ts","store/reducers/index.ts","store/sagas/worker/fetchAccessToken.ts","store/sagas/watcher/fetchAccessToken.ts","store/sagas/worker/fetchFriends.ts","store/sagas/watcher/fetchFriends.ts","store/sagas/watcher/index.ts","store/index.ts","store/actions/user/index.ts","panels/Catalog/Catalog.tsx","components/Dashboard/modules/Card/Card.tsx","components/Dashboard/Dashboard.tsx","components/Contacts/Contacts.tsx","components/Informer/Informer.tsx","panels/App/App.tsx","views/App/App.tsx","types/tabRoute.ts","views/Catalog/Catalog.tsx","router.tsx","app.tsx","index.tsx"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SET_USER","FETCH_ACCESS_TOKEN","initialState","access_token","SET_FRIENDS","getFriendsState","state","friends","combineReducers","user","action","type","constants","payload","fetchAccessTokenWorker","queryString","window","location","search","urlParams","URLSearchParams","get","bridge","send","Number","catch","alert","response","put","fetchAccessTokenWatcher","takeLatest","fetchFriendsWorker","method","params","order","fields","v","store","getState","data","items","fetchFriendsWatcher","watcher","all","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","logger","createBrowserHistory","run","fetchAccessToken","CatalogPanel","props","id","dashboardCard","block","DashboardCard","className","subtitle","title","Dashboard","userId","getTotal","values","summary","Object","forEach","item","header","mode","size","path","isLoading","value","connect","length","map","friend","before","src","photo_100","first_name","last_name","Informer","disabled","onClick","onModalShow","AppPanel","onShowModal","TabRoute","React","useState","activeModal","setActiveModal","currency","contactId","formState","setFormState","onCancelModal","console","log","modal","onClose","left","right","runMutation","a","name","defaultChecked","undefined","onChange","e","target","top","defaultValue","placeholder","onBlur","options","label","result","push","avatar","createFriendsOptions","renderOption","option","restProps","activePanel","modalName","CatalogView","dispatch","bindActionCreators","App","activeStory","setActiveStory","onStoryChange","currentTarget","dataset","story","useEffect","tabbar","selected","Catalog","data-story","firebase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f31f183.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyCumX0HBTrTWuiyCOkwfSmI_ro5pGEGCzM\",\n  authDomain: \"finbox-mini-app.firebaseapp.com\",\n  databaseURL: \"https://finbox-mini-app-default-rtdb.firebaseio.com\",\n  projectId: \"finbox-mini-app\",\n  storageBucket: \"finbox-mini-app.appspot.com\",\n  messagingSenderId: \"261332152446\",\n  appId: \"1:261332152446:web:1b0638cbb10e860a86a82f\"\n};\n\nexport default config;","export const SET_USER = 'SET_USER';\nexport const FETCH_ACCESS_TOKEN = 'FETCH_ACCESS_TOKEN';","import * as constants from '../../constants/user';\nimport { UserAction } from '../../actions/user/types';\nimport { IUserState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IUserState = {\n  access_token: ''\n};\n\n/**\n * The user reducer.\n *\n * @param state\n * @param action\n */\nexport function userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case constants.SET_USER: {\n      return action.payload.user;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return user state.\n *\n * @param state\n */\nexport const getUserState = (state: IState) => state.user;","export const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';","import * as constants from '../../constants/friends';\nimport { FriendsAction } from '../../actions/friends/types';\nimport { IFriendsState } from './types';\nimport {IState} from \"../../types/state\";\n\nconst initialState: IFriendsState = [];\n\n/**\n * The friends reducer.\n *\n * @param state\n * @param action\n */\nexport function friendsReducer(state = initialState, action: FriendsAction) {\n  switch (action.type) {\n    case constants.SET_FRIENDS: {\n      return action.payload.friends;\n    }\n\n    default: return state;\n  }\n}\n\n/**\n * The function return friends state.\n *\n * @param state\n */\nexport const getFriendsState = (state: IState) => state.friends;","import { combineReducers } from 'redux';\nimport { IState } from '../types/state';\n\n/**\n * Reducer's.\n */\nimport { userReducer } from './user';\nimport { friendsReducer } from \"./friends\";\n\n/**\n * The root reducer.\n */\nexport default combineReducers<IState>({\n  user: userReducer,\n  friends: friendsReducer\n})","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetUserAction } from '../../actions/user/types';\nimport { SET_USER } from '../../constants/user';\n\nexport function* fetchAccessTokenWorker() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const appId = urlParams.get('vk_app_id');\n\n  const response = yield bridge.send('VKWebAppGetAuthToken', {\n    'app_id': Number(appId),\n    'scope': 'friends'\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetUserAction>({\n    type: SET_USER,\n    payload: {\n      user: {\n        access_token: response.access_token\n      }\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { FETCH_ACCESS_TOKEN } from '../../constants/user';\nimport { fetchAccessTokenWorker } from '../worker/fetchAccessToken';\n\nexport function* fetchAccessTokenWatcher() {\n  yield takeLatest(FETCH_ACCESS_TOKEN, fetchAccessTokenWorker);\n}","import { put } from 'redux-saga/effects';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ISetFriendsAction } from '../../actions/friends/types';\nimport { SET_FRIENDS } from '../../constants/friends';\nimport { store } from \"../..\";\n\nexport function* fetchFriendsWorker() {\n  const data = yield bridge.send('VKWebAppCallAPIMethod', {\n    method: 'friends.get',\n    params: {\n      order: 'hints',\n      fields: 'nickname,photo_100',\n      v: '5.21',\n      access_token: store.getState().user.access_token\n    }\n  }).catch(() => {\n    alert('Прроизошло критическая ошибка. Пожалуйста, перезагрузите приложение.')\n  });\n\n  yield put<ISetFriendsAction>({\n    type: SET_FRIENDS,\n    payload: {\n      friends: data.response.items\n    }\n  });\n}","import { takeLatest } from 'redux-saga/effects';\nimport { SET_USER } from '../../constants/user';\nimport { fetchFriendsWorker } from '../worker/fetchFriends';\n\nexport function* fetchFriendsWatcher() {\n  yield takeLatest(SET_USER, fetchFriendsWorker);\n}","import { all } from 'redux-saga/effects';\nimport { fetchAccessTokenWatcher } from './fetchAccessToken';\nimport { fetchFriendsWatcher } from './fetchFriends';\n\nexport default function* watcher() {\n  yield all([\n    fetchAccessTokenWatcher(),\n    fetchFriendsWatcher()\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport watcher from './sagas/watcher';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\nconst history = createBrowserHistory();\n\nsagaMiddleware.run(watcher);\n\nexport { store, history };","import * as constants from '../../constants/user';\nimport { ISetUserAction, UserAction } from './types';\n\n/**\n * The set user action.\n *\n * @param payload\n */\nexport function setUser(payload: ISetUserAction['payload']): UserAction {\n  return {\n    type: constants.SET_USER,\n    payload\n  };\n}\n\n/**\n * The fetch access token action.\n */\nexport function fetchAccessToken(): UserAction {\n  return {\n    type: constants.FETCH_ACCESS_TOKEN,\n  };\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport IPanelProps from \"../../types/panelProps\";\n\n/**\n * The catalog panel.\n *\n * @param props\n * @constructor\n */\nexport default function CatalogPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Каталог</PanelHeader>\n    </Panel>\n  );\n}","import React from 'react';\nimport { block } from 'bem-cn';\nimport { Card as CardWrapper } from '@vkontakte/vkui';\nimport { IDashboardCardProps } from './types';\nimport './styles.scss';\n\n/**\n * The class generator.\n */\nconst dashboardCard = block('dashboard-card');\n\n/**\n * The dashboard card module.\n *\n * @param props\n * @constructor\n */\nexport default function DashboardCard(props: IDashboardCardProps): React.ReactElement {\n  return (\n    <CardWrapper>\n      <div className={dashboardCard()}>\n        {props.subtitle && <span className={dashboardCard('subtitle')}>{props.subtitle}</span>}\n        {props.title && <strong className={dashboardCard('title')}>{props.title}</strong>}\n      </div>\n    </CardWrapper>\n  );\n}","import React from 'react';\nimport { CardScroll, Group, Header, Spinner } from '@vkontakte/vkui';\nimport { DashboardCard } from './modules';\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\n\n/**\n * The dashboard component.\n *\n * @constructor\n */\nexport default function Dashboard(): React.ReactElement {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  function getTotal(values: any) {\n    let summary = 0;\n\n    Object.values(values).forEach((item: any) => {\n      summary = Number(item.summary) + summary;\n    });\n\n    return summary;\n  }\n\n  return (\n    <Group header={<Header mode=\"primary\">Активные долги</Header>} mode=\"plain\">\n      <CardScroll size=\"m\">\n        <FirebaseDatabaseNode path={`${userId}/lent`}>\n          {(data) => {\n            return data.isLoading ? (\n              <Spinner size=\"medium\" />\n            ) : data.value ? (\n              <DashboardCard\n                title={`${data.value && getTotal(data.value)} ₽`}\n                subtitle=\"Дал в долг\"\n              />\n            ) : (\n              <DashboardCard subtitle=\"Вы не давали в долг\" />\n            )\n          }}\n        </FirebaseDatabaseNode>\n        <FirebaseDatabaseNode path={`${userId}/borrowed`}>\n          {(data) => {\n            return data.isLoading ? (\n              <Spinner size=\"medium\" />\n            ) : data.value ? (\n              <DashboardCard subtitle={`${data.value && getTotal(data.value)} ₽`} />\n            ) : (\n              <DashboardCard subtitle=\"Вы не брали в долг\" />\n            )\n          }}\n        </FirebaseDatabaseNode>\n      </CardScroll>\n    </Group>\n  )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, Group, Header, SimpleCell, Spinner } from '@vkontakte/vkui';\nimport { IState } from \"../../store/types/state\";\nimport { getFriendsState } from \"../../store/reducers/friends\";\nimport { IContactsProps } from './types';\n\n/**\n * The contacts component.\n *\n * @constructor\n */\nfunction Contacts(props: IContactsProps): React.ReactElement {\n  /**\n   * The function render friends.\n   * @param friends\n   */\n  function renderFriends(friends: IContactsProps['friends']) {\n    return friends.map((friend) => (\n      <SimpleCell before={<Avatar src={friend.photo_100} size={48} />}>\n        {friend.first_name} {friend.last_name}\n      </SimpleCell>\n    ))\n  }\n\n  return (\n    <Group header={<Header mode=\"primary\">Контакты</Header>} mode=\"plain\">\n      {props.friends.length > 0 ? renderFriends(props.friends) : <Spinner size=\"medium\" />}\n    </Group>\n  )\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(Contacts);","import React from 'react';\nimport { Group, Header, CellButton } from '@vkontakte/vkui';\nimport { Icon24HistoryBackwardOutline, Icon24Add } from '@vkontakte/icons';\nimport { IInformerProps } from \"./types\";\n\n/**\n * The informer component.\n *\n * @constructor\n */\nexport default function Informer(props: IInformerProps): React.ReactElement {\n  return (\n    <Group header={<Header mode=\"secondary\">Нет просроченных долгов</Header>}>\n      <CellButton before={<Icon24HistoryBackwardOutline />} disabled>\n        Показать статистику\n      </CellButton>\n      <CellButton\n        before={<Icon24Add />}\n        onClick={() => props.onModalShow && props.onModalShow('add-debt')}>\n        Добавить долг\n      </CellButton>\n    </Group>\n  );\n}","import React from 'react';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport { Informer, Contacts, Dashboard } from '../../components';\nimport IPanelProps from \"../../types/panelProps\";\n\n/**\n * The app panel.\n *\n * @param props\n * @constructor\n */\nexport default function AppPanel(props: IPanelProps): React.ReactElement {\n  return (\n    <Panel id={props.id}>\n      <PanelHeader>Долги</PanelHeader>\n      <Informer onModalShow={props.onShowModal} />\n      <Dashboard />\n      <Contacts />\n    </Panel>\n  );\n}","import React from 'react';\nimport { AppPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport IModal from \"../../types/modal\";\nimport {connect} from \"react-redux\";\nimport {IState} from \"../../store/types/state\";\nimport {getFriendsState} from \"../../store/reducers/friends\";\nimport {IFriendsState} from \"../../store/reducers/friends/types\";\nimport {FirebaseDatabaseMutation} from \"@react-firebase/database\";\nimport { Icon24Cancel, Icon24Add } from '@vkontakte/icons';\nimport {\n  View,\n  ModalRoot,\n  ModalPage,\n  ModalPageHeader,\n  PanelHeaderButton,\n  Group,\n  FormLayout,\n  FormLayoutGroup,\n  FormItem,\n  Radio,\n  Input,\n  Select,\n  CustomSelectOption,\n  Avatar\n} from '@vkontakte/vkui';\n\n/**\n * The app view.\n *\n * @constructor\n */\nfunction AppView(props: ViewProps & PanelProps & { friends: IFriendsState }): React.ReactElement {\n  const [activeModal, setActiveModal] = React.useState<IModal | null>(null);\n  const [formState, setFormState] = React.useState<{\n    type: string | null;\n    summary: string | null;\n    currency: string | null;\n    contactId: string | null;\n  }>({\n    type: 'lent',\n    summary: null,\n    currency: 'RUB',\n    contactId: null\n  });\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const userId = urlParams.get('vk_user_id');\n\n  /**\n   * The function show modal.\n   * @param modalName\n   */\n  function onShowModal(modalName: string): void {\n    return setActiveModal(modalName);\n  }\n\n  console.log(formState);\n\n  /**\n   * The function cancel modal.\n   */\n  function onCancelModal(): void {\n    return setActiveModal(null);\n  }\n\n  /**\n   * The function create friends options.\n   * @param friends\n   */\n  function createFriendsOptions(friends: IFriendsState) {\n    const result: { value: number; label: string; avatar: string; }[] = [];\n\n    friends.forEach((friend) => {\n      result.push({\n        value: friend.id,\n        label: `${friend.first_name} ${friend.last_name}`,\n        avatar: friend.photo_100\n      });\n    });\n\n    return result;\n  }\n\n  const modal = (\n    <ModalRoot activeModal={activeModal} onClose={onCancelModal}>\n      <ModalPage id=\"add-debt\" header={\n        <ModalPageHeader\n          left={\n            <PanelHeaderButton onClick={() => setActiveModal(null)}>\n              <Icon24Cancel />\n            </PanelHeaderButton>\n          }\n          right={\n            formState.type !== null &&\n            formState.summary !== null &&\n            formState.currency !== null &&\n            formState.contactId !== null &&\n            <FirebaseDatabaseMutation path={`${userId}/${formState.type}`} type=\"push\">\n              {({ runMutation }) => (\n                <PanelHeaderButton onClick={async () => {\n                  await runMutation({\n                    summary: formState.summary,\n                    currency: formState.currency,\n                    contactId: formState.contactId\n                  });\n\n                  onCancelModal();\n                }}>\n                  <Icon24Add />\n                </PanelHeaderButton>\n              )}\n            </FirebaseDatabaseMutation>\n          }\n        >Добавить долг</ModalPageHeader>\n      }>\n        <Group>\n          <FormLayout>\n            <FormLayoutGroup mode=\"horizontal\">\n              <FormItem>\n                <Radio\n                  name=\"type\"\n                  value=\"lent\"\n                  defaultChecked={formState.type === 'lent' ? true : undefined}\n                  onChange={(e) => {\n                    setFormState({\n                      ...formState,\n                      type: e.target.value\n                    });\n                  }}\n                >Дал в долг</Radio>\n              </FormItem>\n              <FormItem>\n                <Radio\n                  name=\"type\"\n                  value=\"borrowed\"\n                  defaultChecked={formState.type === 'borrowed' ? true : undefined}\n                  onChange={(e) => {\n                    setFormState({\n                      ...formState,\n                      type: e.target.value\n                    });\n                  }}\n                >Дал в долг</Radio>\n              </FormItem>\n            </FormLayoutGroup>\n          </FormLayout>\n          <FormLayout>\n            <FormLayoutGroup mode=\"horizontal\">\n              <FormItem top=\"Сумма\">\n                <Input\n                  defaultValue={formState.summary !== null ? formState.summary : undefined}\n                  placeholder=\"Введите сумму\"\n                  onBlur={(e) => {\n                    setFormState({\n                      ...formState,\n                      summary: e.target.value\n                    });\n                  }}\n                />\n              </FormItem>\n              <FormItem top=\"Валюта\">\n                <Select\n                  placeholder=\"Валюта\"\n                  defaultValue={formState.currency !== null ? formState.currency : undefined}\n                  options={[\n                    { value: 'RUB', label: 'RUB' },\n                    { value: 'USD', label: 'USD' }\n                  ]}\n                  onChange={(e) => {\n                    setFormState({\n                      ...formState,\n                      currency: e.target.value\n                    });\n                  }}\n                />\n              </FormItem>\n            </FormLayoutGroup>\n          </FormLayout>\n          <FormItem top=\"Контакт\">\n            <Select\n              placeholder=\"Выберите контакт\"\n              options={createFriendsOptions(props.friends)}\n              defaultValue={formState.contactId !== null ? formState.contactId : undefined}\n              onChange={(e) => {\n                setFormState({\n                  ...formState,\n                  contactId: e.target.value\n                });\n              }}\n              renderOption={({ option, ...restProps }) => (\n                <CustomSelectOption {...restProps} before={<Avatar size={24} src={option.avatar} />} />\n              )}\n            />\n          </FormItem>\n        </Group>\n      </ModalPage>\n    </ModalRoot>\n  );\n\n  return (\n    <View id={props.id} modal={modal} activePanel={props.activePanel}>\n      <AppPanel id={props.id} onShowModal={onShowModal} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state: IState) => ({\n  friends: getFriendsState(state)\n});\n\nexport default connect(mapStateToProps)(AppView);","/**\n * The tab routes with names.\n */\nenum TabRoute {\n  'Catalog' = 'catalog',\n  'App' = 'app'\n}\n\nexport default TabRoute;","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport { CatalogPanel } from \"../../panels\";\nimport { ViewProps } from \"@vkontakte/vkui/dist/components/View/View\";\nimport { PanelProps } from \"@vkontakte/vkui/dist/components/Panel/Panel\";\n\n/**\n * The catalog view.\n *\n * @constructor\n */\nexport default function CatalogView(props: ViewProps & PanelProps): React.ReactElement {\n  return (\n    <View id={props.id} activePanel={props.activePanel}>\n      <CatalogPanel id={props.id} />\n    </View>\n  );\n}","import React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppRoot, Epic, Tabbar, TabbarItem, View } from '@vkontakte/vkui';\nimport { Icon28BookOutline, Icon28ServicesOutline } from '@vkontakte/icons';\nimport { fetchAccessToken } from './store/actions/user';\nimport { CatalogView, AppView } from './views';\nimport { IRouterProps, IStory, TabRoute } from './types';\n\n/**\n * The app router.\n *\n * @constructor\n */\nfunction Router(props: IRouterProps): React.ReactElement {\n  const [activeStory, setActiveStory] = React.useState<IStory>(TabRoute.App);\n\n  React.useEffect(() => {\n    props.fetchAccessToken();\n  }, [props]);\n\n  function onStoryChange(e: any): void {\n    return setActiveStory(e.currentTarget.dataset.story);\n  }\n\n  return (\n    <AppRoot>\n      <Epic activeStory={activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.Catalog}\n            data-story={TabRoute.Catalog}\n          ><Icon28BookOutline /></TabbarItem>\n          <TabbarItem\n            onClick={onStoryChange}\n            selected={activeStory === TabRoute.App}\n            data-story={TabRoute.App}\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n        <CatalogView id={TabRoute.Catalog} activePanel={TabRoute.Catalog} />\n        <AppView id={TabRoute.App} activePanel={TabRoute.App} />\n      </Epic>\n    </AppRoot>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAccessToken: bindActionCreators(fetchAccessToken, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(Router);","import React from 'react';\nimport firebase from 'firebase';\nimport config from './firebase/config';\nimport { FirebaseDatabaseProvider } from '@react-firebase/database';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Router from './router';\n\n/**\n * The root app component.\n *\n * @constructor\n */\nexport default function App(): React.ReactElement {\n  return (\n    <FirebaseDatabaseProvider firebase={firebase} {...config}>\n      <Provider store={store}>\n        <Router />\n      </Provider>\n    </FirebaseDatabaseProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}